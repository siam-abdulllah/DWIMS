{"version":3,"sources":["./src/polyfills.ts","./node_modules/zone.js/dist/zone-evergreen.js"],"names":["global","performance","mark","name","performanceMeasure","label","symbolPrefix","__symbol__","checkDuplicate","Error","Zone","parent","zoneSpec","this","_parent","_name","_properties","properties","_zoneDelegate","ZoneDelegate","patches","zone","current","_currentZoneFrame","_currentTask","fn","ignoreDuplicate","hasOwnProperty","perfName","_api","key","getZoneWith","fork","callback","source","_callback","intercept","runGuarded","arguments","applyThis","applyArgs","invoke","error","handleError","task","NO_ZONE","state","notScheduled","type","eventTask","macroTask","reEntryGuard","running","_transitionTo","scheduled","runCount","previousTask","data","isPeriodic","cancelFn","undefined","invokeTask","unknown","_updateTaskCount","newZone","scheduling","zoneDelegates","_zoneDelegates","_zone","scheduleTask","err","customSchedule","ZoneTask","microTask","customCancel","canceling","cancelTask","count","i","length","DELEGATE_ZS","onHasTask","delegate","_","target","hasTaskState","hasTask","onScheduleTask","onInvokeTask","onCancelTask","parentDelegate","_taskCounts","_parentDelegate","_forkZS","onFork","_forkDlgt","_forkCurrZone","_interceptZS","onIntercept","_interceptDlgt","_interceptCurrZone","_invokeZS","onInvoke","_invokeDlgt","_invokeCurrZone","_handleErrorZS","onHandleError","_handleErrorDlgt","_handleErrorCurrZone","_scheduleTaskZS","_scheduleTaskDlgt","_scheduleTaskCurrZone","_invokeTaskZS","_invokeTaskDlgt","_invokeTaskCurrZone","_cancelTaskZS","_cancelTaskDlgt","_cancelTaskCurrZone","_hasTaskZS","_hasTaskDlgt","_hasTaskDlgtOwner","_hasTaskCurrZone","zoneSpecHasTask","parentHasTask","targetZone","apply","returnTask","push","scheduleFn","scheduleMicroTask","value","isEmpty","counts","prev","next","change","options","_state","self","useG","call","args","_numberOfNestedTaskFrames","runTask","drainMicroTaskQueue","toState","fromState1","fromState2","handleId","toString","Object","prototype","symbolSetTimeout","symbolPromise","symbolThen","nativeMicroTaskQueuePromise","_microTaskQueue","_isDrainingMicrotaskQueue","resolve","nativeThen","queue","onUnhandledError","microtaskDrainDone","symbol","currentZoneFrame","noop","showUncaughtError","patchEventTarget","patchOnProperties","patchMethod","bindArguments","patchThen","patchMacroTask","patchEventPrototype","isIEOrEdge","getGlobalObjects","ObjectDefineProperty","ObjectGetOwnPropertyDescriptor","ObjectCreate","ArraySlice","patchClass","wrapWithCurrentZone","filterProperties","attachOriginToPatched","_redefineProperty","patchCallbacks","window","getOwnPropertyDescriptor","defineProperty","ObjectGetPrototypeOf","getPrototypeOf","create","Array","slice","ADD_EVENT_LISTENER_STR","REMOVE_EVENT_LISTENER_STR","ZONE_SYMBOL_ADD_EVENT_LISTENER","ZONE_SYMBOL_REMOVE_EVENT_LISTENER","TRUE_STR","FALSE_STR","ZONE_SYMBOL_PREFIX","wrap","scheduleMacroTaskWithCurrentZone","scheduleMacroTask","zoneSymbol","isWindowExists","internalWindow","_global","NULL_ON_PROP_VALUE","isPropertyWritable","propertyDesc","writable","get","set","isWebWorker","WorkerGlobalScope","isNode","process","isBrowser","isMix","zoneSymbolEventNames","wrapFn","event","eventNameSymbol","listener","result","errorEvent","message","filename","lineno","colno","preventDefault","patchProperty","obj","prop","desc","enumerable","configurable","onPropPatchedSymbol","originalDescGet","originalDescSet","eventName","substr","newValue","removeEventListener","addEventListener","removeAttribute","onProperties","j","originalInstanceKey","className","OriginalClass","a","instance","patchFn","proto","delegateName","patchDelegate","funcName","metaCreator","setNative","cbIdx","meta","patched","original","isDetectedIEOrEdge","ieOrEdge","isIE","ua","navigator","userAgent","indexOf","__load_patch","api","_uncaughtPromiseErrors","isDisableWrappingUncaughtPromiseRejection","e","rejection","console","stack","uncaughtPromiseError","shift","throwOriginal","handleUnhandledRejection","UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL","handler","isThenable","then","forwardResolution","forwardRejection","ZoneAwarePromise","reject","symbolState","symbolValue","symbolFinally","symbolParentPromiseValue","symbolParentPromiseState","UNRESOLVED","RESOLVED","REJECTED","makeResolver","promise","v","resolvePromise","CURRENT_TASK_TRACE_SYMBOL","onceWrapper","wasCalled","wrappedFunction","once","TypeError","clearRejectedNoCatch","trace","currentTask","scheduleResolveOrReject","constructor","JSON","stringify","readableObjectToString","REJECTION_HANDLED_HANDLER","splice","chainPromise","onFulfilled","onRejected","promiseState","parentPromiseValue","isFinallyPromise","run","values","res","rej","onResolve","onReject","allWithCallback","thenCallback","status","errorCallback","reason","unresolvedCount","valueIndex","resolvedValues","curValueIndex","thenErr","executor","Symbol","toStringTag","species","C","onFinally","race","all","NativePromise","symbolThenPatched","Ctor","originalThen","zoneify","resultPromise","ctor","Promise","originalFunctionToString","Function","ORIGINAL_DELEGATE_SYMBOL","PROMISE_SYMBOL","ERROR_SYMBOL","newFunctionToString","originalDelegate","nativePromise","nativeError","originalObjectToString","passiveSupported","OPTIMIZED_ZONE_EVENT_TASK_DATA","zoneSymbolEventNames$1","globalSources","EVENT_NAME_SYMBOL_REGX","RegExp","IMMEDIATE_PROPAGATION_SYMBOL","prepareEventNames","eventNameToString","falseEventName","trueEventName","symbolCapture","apis","patchOptions","ADD_EVENT_LISTENER","add","REMOVE_EVENT_LISTENER","rm","LISTENERS_EVENT_LISTENER","listeners","REMOVE_ALL_LISTENERS_EVENT_LISTENER","rmAll","zoneSymbolAddEventListener","ADD_EVENT_LISTENER_SOURCE","isRemoved","handleEvent","globalZoneAwareCallback","tasks","copyTasks","globalZoneAwareCaptureCallback","patchEventTargetMethods","useGlobalCallback","validateHandler","vh","chkDup","returnTarget","rt","taskData","nativeAddEventListener","nativeRemoveEventListener","nativeListeners","nativeRemoveAllListeners","nativePrependEventListener","buildEventListenerOptions","passive","capture","assign","prepend","customSchedulePrepend","isExisting","symbolEventNames","symbolEventName","existingTasks","allRemoved","compare","diff","typeOfDelegate","unpatchedEvents","passiveEvents","makeAddListener","nativeListener","addSource","customScheduleFn","customCancelFn","transferEventName","isHandleEvent","constructorName","targetSource","scheduleEventTask","unshift","existingTask","findEventTasks","symbolCaptureEventName","captureTasks","removeTasks","keys","match","exec","evtName","results","foundTasks","captureFalseTasks","captureTrueTasks","concat","Event","targetName","method","callbacks","nativeDelegate","opts","forEach","descriptor","windowEventNames","mediaElementEventNames","frameEventNames","frameSetEventNames","marqueeEventNames","XMLHttpRequestEventNames","IDBIndexEventNames","websocketEventNames","workerEventNames","eventNames","ignoreProperties","tip","filter","ip","targetIgnoreProperties","op","patchFilteredProperties","propertyDescriptorPatch","supportsWebSocket","WebSocket","ignoreErrorProperties","Document","Element","HTMLElement","HTMLMediaElement","HTMLFrameSetElement","HTMLBodyElement","HTMLFrameElement","HTMLIFrameElement","HTMLMarqueeElement","Worker","XMLHttpRequest","XMLHttpRequestEventTarget","IDBIndex","IDBRequest","IDBOpenDBRequest","IDBDatabase","IDBTransaction","IDBCursor","SYMBOL_BLACK_LISTED_EVENTS","SYMBOL_UNPATCHED_EVENTS","taskSymbol","patchTimer","setName","cancelName","nameSuffix","clearNative","tasksByHandleId","clearTask","delay","handle","ref","unref","bind","id","eventTargetPatch","EVENT_TARGET","legacyPatch","clear","blockingMethods","s","patchEvent","customElements","patchCustomElements","XMLHttpRequestPrototype","oriAddListener","oriRemoveListener","XMLHttpRequestEventTargetPrototype","READY_STATE_CHANGE","SCHEDULED","XHR_SCHEDULED","XHR_ERROR_BEFORE_SCHEDULED","XHR_LISTENER","newListener","readyState","DONE","aborted","loadTasks","oriInvoke","XHR_TASK","sendNative","placeholderCallback","abortNative","openNative","XHR_SYNC","XHR_URL","fetchTaskAborting","fetchTaskScheduling","url","patchXHR","geolocation","fnNames","patchPrototype","findPromiseRejectionHandler","PromiseRejectionEvent","evt"],"mappings":"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AAY,UAAW,UAC1E,oBAEEC,GAAqB,CAAC,gBAAiB,WAAY,QAAS,UAAW,QAAS,UAAW,gBAAiB,SAC5GC,GAAsB,CAAC,QAAS,QAAS,OAAQ,WACjDC,GAAmB,CAAC,QAAS,WAC7BC,GApNgC,CAClC,QACA,kBACA,eACA,qBACA,WACA,cACA,OACA,SACA,UACA,iBACA,SACA,mBACA,oBACA,iBACA,YACA,QACA,QACA,cACA,aACA,WACA,OACA,UACA,YACA,WACA,YACA,WACA,OACA,iBACA,UACA,QACA,QACA,QACA,UACA,WACA,oBACA,QACA,UACA,UACA,WACA,QACA,OACA,YACA,aACA,iBACA,qBACA,YACA,aACA,aACA,YACA,WACA,YACA,UACA,aACA,oBACA,QACA,OACA,UACA,gBACA,cACA,eACA,eACA,oBACA,uBACA,4BACA,mBACA,sBACA,yBACA,cACA,WACA,cACA,YACA,WACA,aACA,QACA,SACA,SACA,SACA,UACA,SACA,kBACA,cACA,OACA,OACA,UACA,SACA,UACA,aACA,eACA,cACA,YACA,aACA,WACA,mBACA,gBACA,UACA,SAoH6ClB,OAbzB,CAAC,uBAAwB,mBAAoB,6BAC9C,CAAC,eAAgB,qBACf,CAAC,UAvGC,CACvB,qBAAsB,sBAAuB,mBAAoB,SAAU,mBAC3E,sBAAuB,yBAA0B,qBAAsB,kBACvE,qBAAsB,wBAAyB,oBAAqB,mBACpE,mBAAoB,UA8GuGS,EA5EjG,CAC1B,aAAc,YAAa,cAAe,OAAQ,MAAO,QAAS,YAAa,UAC/E,iBAAkB,SAAU,gBAAiB,kBAAmB,qBAChE,2BAA4B,uBAAwB,uBAG5B,CACxB,WACA,cACA,cACA,iBACA,mBACA,kBACA,eACA,aACA,gBACA,gBACA,iBACA,kBACA,cACA,eACA,iBACA,cACA,OACA,UACA,YACA,iBACA,YACA,cACA,WACA,UACA,aACA,eACA,UACA,0BACA,aACA,OACA,gBACA,6BACA,kBACA,qBACA,eACA,gBACA,iBACA,eACA,sBACA,iBACA,uBACA,kBACA,gBACA,iBACA,iBACA,iBACA,gBACA,eAC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","file":"polyfills.af4db9eea679d9e79af3.js","sourcesContent":["/**\r\n * This file includes polyfills needed by Angular and is loaded before the app.\r\n * You can add your own extra polyfills to this file.\r\n *\r\n * This file is divided into 2 sections:\r\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\r\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\r\n *      file.\r\n *\r\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\r\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\r\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\r\n *\r\n * Learn more in https://angular.io/guide/browser-support\r\n */\r\n\r\n/***************************************************************************************************\r\n * BROWSER POLYFILLS\r\n */\r\n\r\n/**\r\n * IE11 requires the following for NgClass support on SVG elements\r\n */\r\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\r\n\r\n/**\r\n * Web Animations `@angular/platform-browser/animations`\r\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\r\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\r\n */\r\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\r\n\r\n/**\r\n * By default, zone.js will patch all possible macroTask and DomEvents\r\n * user can disable parts of macroTask/DomEvents patch by setting following flags\r\n * because those flags need to be set before `zone.js` being loaded, and webpack\r\n * will put import in the top of bundle, so user need to create a separate file\r\n * in this directory (for example: zone-flags.ts), and put the following flags\r\n * into that file, and then add the following code before importing zone.js.\r\n * import './zone-flags';\r\n *\r\n * The flags allowed in zone-flags.ts are listed here.\r\n *\r\n * The following flags will work for all browsers.\r\n *\r\n * (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\r\n * (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\r\n * (window as any).__zone_symbol__UNPATCHED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\r\n *\r\n *  in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\r\n *  with the following flag, it will bypass `zone.js` patch for IE/Edge\r\n *\r\n *  (window as any).__Zone_enable_cross_context_check = true;\r\n *\r\n */\r\n\r\n/***************************************************************************************************\r\n * Zone JS is required by default for Angular itself.\r\n */\r\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\r\n\r\n\r\n/***************************************************************************************************\r\n * APPLICATION IMPORTS\r\n */\r\n","'use strict';\n/**\n * @license Angular v12.0.0-next.0\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst Zone$1 = (function (global) {\n    const performance = global['performance'];\n    function mark(name) {\n        performance && performance['mark'] && performance['mark'](name);\n    }\n    function performanceMeasure(name, label) {\n        performance && performance['measure'] && performance['measure'](name, label);\n    }\n    mark('Zone');\n    // Initialize before it's accessed below.\n    // __Zone_symbol_prefix global can be used to override the default zone\n    // symbol prefix with a custom one if needed.\n    const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n    function __symbol__(name) {\n        return symbolPrefix + name;\n    }\n    const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n    if (global['Zone']) {\n        // if global['Zone'] already exists (maybe zone.js was already loaded or\n        // some other lib also registered a global object named Zone), we may need\n        // to throw an error, but sometimes user may not want this error.\n        // For example,\n        // we have two web pages, page1 includes zone.js, page2 doesn't.\n        // and the 1st time user load page1 and page2, everything work fine,\n        // but when user load page2 again, error occurs because global['Zone'] already exists.\n        // so we add a flag to let user choose whether to throw this error or not.\n        // By default, if existing Zone is from zone.js, we will not throw the error.\n        if (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function') {\n            throw new Error('Zone already loaded.');\n        }\n        else {\n            return global['Zone'];\n        }\n    }\n    class Zone {\n        constructor(parent, zoneSpec) {\n            this._parent = parent;\n            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n            this._properties = zoneSpec && zoneSpec.properties || {};\n            this._zoneDelegate =\n                new ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n        }\n        static assertZonePatched() {\n            if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                    'has been overwritten.\\n' +\n                    'Most likely cause is that a Promise polyfill has been loaded ' +\n                    'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                    'If you must load one, do so before loading zone.js.)');\n            }\n        }\n        static get root() {\n            let zone = Zone.current;\n            while (zone.parent) {\n                zone = zone.parent;\n            }\n            return zone;\n        }\n        static get current() {\n            return _currentZoneFrame.zone;\n        }\n        static get currentTask() {\n            return _currentTask;\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        static __load_patch(name, fn, ignoreDuplicate = false) {\n            if (patches.hasOwnProperty(name)) {\n                // `checkDuplicate` option is defined from global variable\n                // so it works for all modules.\n                // `ignoreDuplicate` can work for the specified module\n                if (!ignoreDuplicate && checkDuplicate) {\n                    throw Error('Already loaded patch: ' + name);\n                }\n            }\n            else if (!global['__Zone_disable_' + name]) {\n                const perfName = 'Zone:' + name;\n                mark(perfName);\n                patches[name] = fn(global, Zone, _api);\n                performanceMeasure(perfName, perfName);\n            }\n        }\n        get parent() {\n            return this._parent;\n        }\n        get name() {\n            return this._name;\n        }\n        get(key) {\n            const zone = this.getZoneWith(key);\n            if (zone)\n                return zone._properties[key];\n        }\n        getZoneWith(key) {\n            let current = this;\n            while (current) {\n                if (current._properties.hasOwnProperty(key)) {\n                    return current;\n                }\n                current = current._parent;\n            }\n            return null;\n        }\n        fork(zoneSpec) {\n            if (!zoneSpec)\n                throw new Error('ZoneSpec required!');\n            return this._zoneDelegate.fork(this, zoneSpec);\n        }\n        wrap(callback, source) {\n            if (typeof callback !== 'function') {\n                throw new Error('Expecting function got: ' + callback);\n            }\n            const _callback = this._zoneDelegate.intercept(this, callback, source);\n            const zone = this;\n            return function () {\n                return zone.runGuarded(_callback, this, arguments, source);\n            };\n        }\n        run(callback, applyThis, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runGuarded(callback, applyThis = null, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runTask(task, applyThis, applyArgs) {\n            if (task.zone != this) {\n                throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            }\n            // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n            // will run in notScheduled(canceled) state, we should not try to\n            // run such kind of task but just return\n            if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {\n                return;\n            }\n            const reEntryGuard = task.state != running;\n            reEntryGuard && task._transitionTo(running, scheduled);\n            task.runCount++;\n            const previousTask = _currentTask;\n            _currentTask = task;\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n                    task.cancelFn = undefined;\n                }\n                try {\n                    return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                // if the task's state is notScheduled or unknown, then it has already been cancelled\n                // we should not reset the state to scheduled\n                if (task.state !== notScheduled && task.state !== unknown) {\n                    if (task.type == eventTask || (task.data && task.data.isPeriodic)) {\n                        reEntryGuard && task._transitionTo(scheduled, running);\n                    }\n                    else {\n                        task.runCount = 0;\n                        this._updateTaskCount(task, -1);\n                        reEntryGuard &&\n                            task._transitionTo(notScheduled, running, notScheduled);\n                    }\n                }\n                _currentZoneFrame = _currentZoneFrame.parent;\n                _currentTask = previousTask;\n            }\n        }\n        scheduleTask(task) {\n            if (task.zone && task.zone !== this) {\n                // check if the task was rescheduled, the newZone\n                // should not be the children of the original zone\n                let newZone = this;\n                while (newZone) {\n                    if (newZone === task.zone) {\n                        throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                    }\n                    newZone = newZone.parent;\n                }\n            }\n            task._transitionTo(scheduling, notScheduled);\n            const zoneDelegates = [];\n            task._zoneDelegates = zoneDelegates;\n            task._zone = this;\n            try {\n                task = this._zoneDelegate.scheduleTask(this, task);\n            }\n            catch (err) {\n                // should set task's state to unknown when scheduleTask throw error\n                // because the err may from reschedule, so the fromState maybe notScheduled\n                task._transitionTo(unknown, scheduling, notScheduled);\n                // TODO: @JiaLiPassion, should we check the result from handleError?\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            if (task._zoneDelegates === zoneDelegates) {\n                // we have to check because internally the delegate can reschedule the task.\n                this._updateTaskCount(task, 1);\n            }\n            if (task.state == scheduling) {\n                task._transitionTo(scheduled, scheduling);\n            }\n            return task;\n        }\n        scheduleMicroTask(source, callback, data, customSchedule) {\n            return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n        }\n        scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n        }\n        scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n        }\n        cancelTask(task) {\n            if (task.zone != this)\n                throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            task._transitionTo(canceling, scheduled, running);\n            try {\n                this._zoneDelegate.cancelTask(this, task);\n            }\n            catch (err) {\n                // if error occurs when cancelTask, transit the state to unknown\n                task._transitionTo(unknown, canceling);\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            this._updateTaskCount(task, -1);\n            task._transitionTo(notScheduled, canceling);\n            task.runCount = 0;\n            return task;\n        }\n        _updateTaskCount(task, count) {\n            const zoneDelegates = task._zoneDelegates;\n            if (count == -1) {\n                task._zoneDelegates = null;\n            }\n            for (let i = 0; i < zoneDelegates.length; i++) {\n                zoneDelegates[i]._updateTaskCount(task.type, count);\n            }\n        }\n    }\n    // tslint:disable-next-line:require-internal-with-underscore\n    Zone.__symbol__ = __symbol__;\n    const DELEGATE_ZS = {\n        name: '',\n        onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n        onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n        onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n        onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task)\n    };\n    class ZoneDelegate {\n        constructor(zone, parentDelegate, zoneSpec) {\n            this._taskCounts = { 'microTask': 0, 'macroTask': 0, 'eventTask': 0 };\n            this.zone = zone;\n            this._parentDelegate = parentDelegate;\n            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n            this._forkCurrZone =\n                zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate._forkCurrZone);\n            this._interceptZS =\n                zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n            this._interceptDlgt =\n                zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n            this._interceptCurrZone =\n                zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate._interceptCurrZone);\n            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n            this._invokeDlgt =\n                zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n            this._invokeCurrZone =\n                zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate._invokeCurrZone);\n            this._handleErrorZS =\n                zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n            this._handleErrorDlgt =\n                zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n            this._handleErrorCurrZone =\n                zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate._handleErrorCurrZone);\n            this._scheduleTaskZS =\n                zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n            this._scheduleTaskDlgt = zoneSpec &&\n                (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n            this._scheduleTaskCurrZone =\n                zoneSpec && (zoneSpec.onScheduleTask ? this.zone : parentDelegate._scheduleTaskCurrZone);\n            this._invokeTaskZS =\n                zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n            this._invokeTaskDlgt =\n                zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n            this._invokeTaskCurrZone =\n                zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate._invokeTaskCurrZone);\n            this._cancelTaskZS =\n                zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n            this._cancelTaskDlgt =\n                zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n            this._cancelTaskCurrZone =\n                zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate._cancelTaskCurrZone);\n            this._hasTaskZS = null;\n            this._hasTaskDlgt = null;\n            this._hasTaskDlgtOwner = null;\n            this._hasTaskCurrZone = null;\n            const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n            const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n            if (zoneSpecHasTask || parentHasTask) {\n                // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                this._hasTaskDlgt = parentDelegate;\n                this._hasTaskDlgtOwner = this;\n                this._hasTaskCurrZone = zone;\n                if (!zoneSpec.onScheduleTask) {\n                    this._scheduleTaskZS = DELEGATE_ZS;\n                    this._scheduleTaskDlgt = parentDelegate;\n                    this._scheduleTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onInvokeTask) {\n                    this._invokeTaskZS = DELEGATE_ZS;\n                    this._invokeTaskDlgt = parentDelegate;\n                    this._invokeTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onCancelTask) {\n                    this._cancelTaskZS = DELEGATE_ZS;\n                    this._cancelTaskDlgt = parentDelegate;\n                    this._cancelTaskCurrZone = this.zone;\n                }\n            }\n        }\n        fork(targetZone, zoneSpec) {\n            return this._forkZS ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\n                new Zone(targetZone, zoneSpec);\n        }\n        intercept(targetZone, callback, source) {\n            return this._interceptZS ?\n                this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :\n                callback;\n        }\n        invoke(targetZone, callback, applyThis, applyArgs, source) {\n            return this._invokeZS ? this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :\n                callback.apply(applyThis, applyArgs);\n        }\n        handleError(targetZone, error) {\n            return this._handleErrorZS ?\n                this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :\n                true;\n        }\n        scheduleTask(targetZone, task) {\n            let returnTask = task;\n            if (this._scheduleTaskZS) {\n                if (this._hasTaskZS) {\n                    returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                }\n                // clang-format off\n                returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                // clang-format on\n                if (!returnTask)\n                    returnTask = task;\n            }\n            else {\n                if (task.scheduleFn) {\n                    task.scheduleFn(task);\n                }\n                else if (task.type == microTask) {\n                    scheduleMicroTask(task);\n                }\n                else {\n                    throw new Error('Task is missing scheduleFn.');\n                }\n            }\n            return returnTask;\n        }\n        invokeTask(targetZone, task, applyThis, applyArgs) {\n            return this._invokeTaskZS ? this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :\n                task.callback.apply(applyThis, applyArgs);\n        }\n        cancelTask(targetZone, task) {\n            let value;\n            if (this._cancelTaskZS) {\n                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n            }\n            else {\n                if (!task.cancelFn) {\n                    throw Error('Task is not cancelable');\n                }\n                value = task.cancelFn(task);\n            }\n            return value;\n        }\n        hasTask(targetZone, isEmpty) {\n            // hasTask should not throw error so other ZoneDelegate\n            // can still trigger hasTask callback\n            try {\n                this._hasTaskZS &&\n                    this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n            }\n            catch (err) {\n                this.handleError(targetZone, err);\n            }\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _updateTaskCount(type, count) {\n            const counts = this._taskCounts;\n            const prev = counts[type];\n            const next = counts[type] = prev + count;\n            if (next < 0) {\n                throw new Error('More tasks executed then were scheduled.');\n            }\n            if (prev == 0 || next == 0) {\n                const isEmpty = {\n                    microTask: counts['microTask'] > 0,\n                    macroTask: counts['macroTask'] > 0,\n                    eventTask: counts['eventTask'] > 0,\n                    change: type\n                };\n                this.hasTask(this.zone, isEmpty);\n            }\n        }\n    }\n    class ZoneTask {\n        constructor(type, source, callback, options, scheduleFn, cancelFn) {\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zone = null;\n            this.runCount = 0;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zoneDelegates = null;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._state = 'notScheduled';\n            this.type = type;\n            this.source = source;\n            this.data = options;\n            this.scheduleFn = scheduleFn;\n            this.cancelFn = cancelFn;\n            if (!callback) {\n                throw new Error('callback is not defined');\n            }\n            this.callback = callback;\n            const self = this;\n            // TODO: @JiaLiPassion options should have interface\n            if (type === eventTask && options && options.useG) {\n                this.invoke = ZoneTask.invokeTask;\n            }\n            else {\n                this.invoke = function () {\n                    return ZoneTask.invokeTask.call(global, self, this, arguments);\n                };\n            }\n        }\n        static invokeTask(task, target, args) {\n            if (!task) {\n                task = this;\n            }\n            _numberOfNestedTaskFrames++;\n            try {\n                task.runCount++;\n                return task.zone.runTask(task, target, args);\n            }\n            finally {\n                if (_numberOfNestedTaskFrames == 1) {\n                    drainMicroTaskQueue();\n                }\n                _numberOfNestedTaskFrames--;\n            }\n        }\n        get zone() {\n            return this._zone;\n        }\n        get state() {\n            return this._state;\n        }\n        cancelScheduleRequest() {\n            this._transitionTo(notScheduled, scheduling);\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _transitionTo(toState, fromState1, fromState2) {\n            if (this._state === fromState1 || this._state === fromState2) {\n                this._state = toState;\n                if (toState == notScheduled) {\n                    this._zoneDelegates = null;\n                }\n            }\n            else {\n                throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? ' or \\'' + fromState2 + '\\'' : ''}, was '${this._state}'.`);\n            }\n        }\n        toString() {\n            if (this.data && typeof this.data.handleId !== 'undefined') {\n                return this.data.handleId.toString();\n            }\n            else {\n                return Object.prototype.toString.call(this);\n            }\n        }\n        // add toJSON method to prevent cyclic error when\n        // call JSON.stringify(zoneTask)\n        toJSON() {\n            return {\n                type: this.type,\n                state: this.state,\n                source: this.source,\n                zone: this.zone.name,\n                runCount: this.runCount\n            };\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  MICROTASK QUEUE\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const symbolSetTimeout = __symbol__('setTimeout');\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    let _microTaskQueue = [];\n    let _isDrainingMicrotaskQueue = false;\n    let nativeMicroTaskQueuePromise;\n    function scheduleMicroTask(task) {\n        // if we are not running in any task, and there has not been anything scheduled\n        // we must bootstrap the initial task creation by manually scheduling the drain\n        if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n            // We are not running in Task, so we need to kickstart the microtask queue.\n            if (!nativeMicroTaskQueuePromise) {\n                if (global[symbolPromise]) {\n                    nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n                }\n            }\n            if (nativeMicroTaskQueuePromise) {\n                let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n                if (!nativeThen) {\n                    // native Promise is not patchable, we need to use `then` directly\n                    // issue 1078\n                    nativeThen = nativeMicroTaskQueuePromise['then'];\n                }\n                nativeThen.call(nativeMicroTaskQueuePromise, drainMicroTaskQueue);\n            }\n            else {\n                global[symbolSetTimeout](drainMicroTaskQueue, 0);\n            }\n        }\n        task && _microTaskQueue.push(task);\n    }\n    function drainMicroTaskQueue() {\n        if (!_isDrainingMicrotaskQueue) {\n            _isDrainingMicrotaskQueue = true;\n            while (_microTaskQueue.length) {\n                const queue = _microTaskQueue;\n                _microTaskQueue = [];\n                for (let i = 0; i < queue.length; i++) {\n                    const task = queue[i];\n                    try {\n                        task.zone.runTask(task, null, null);\n                    }\n                    catch (error) {\n                        _api.onUnhandledError(error);\n                    }\n                }\n            }\n            _api.microtaskDrainDone();\n            _isDrainingMicrotaskQueue = false;\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  BOOTSTRAP\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const NO_ZONE = { name: 'NO ZONE' };\n    const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n    const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n    const patches = {};\n    const _api = {\n        symbol: __symbol__,\n        currentZoneFrame: () => _currentZoneFrame,\n        onUnhandledError: noop,\n        microtaskDrainDone: noop,\n        scheduleMicroTask: scheduleMicroTask,\n        showUncaughtError: () => !Zone[__symbol__('ignoreConsoleErrorUncaughtError')],\n        patchEventTarget: () => [],\n        patchOnProperties: noop,\n        patchMethod: () => noop,\n        bindArguments: () => [],\n        patchThen: () => noop,\n        patchMacroTask: () => noop,\n        patchEventPrototype: () => noop,\n        isIEOrEdge: () => false,\n        getGlobalObjects: () => undefined,\n        ObjectDefineProperty: () => noop,\n        ObjectGetOwnPropertyDescriptor: () => undefined,\n        ObjectCreate: () => undefined,\n        ArraySlice: () => [],\n        patchClass: () => noop,\n        wrapWithCurrentZone: () => noop,\n        filterProperties: () => [],\n        attachOriginToPatched: () => noop,\n        _redefineProperty: () => noop,\n        patchCallbacks: () => noop\n    };\n    let _currentZoneFrame = { parent: null, zone: new Zone(null, null) };\n    let _currentTask = null;\n    let _numberOfNestedTaskFrames = 0;\n    function noop() { }\n    performanceMeasure('Zone', 'Zone');\n    return global['Zone'] = Zone;\n})(typeof window !== 'undefined' && window || typeof self !== 'undefined' && self || global);\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Suppress closure compiler errors about unknown 'Zone' variable\n * @fileoverview\n * @suppress {undefinedVars,globalThis,missingRequire}\n */\n/// <reference types=\"node\"/>\n// issue #989, to reduce bundle size, use short name\n/** Object.getOwnPropertyDescriptor */\nconst ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n/** Object.defineProperty */\nconst ObjectDefineProperty = Object.defineProperty;\n/** Object.getPrototypeOf */\nconst ObjectGetPrototypeOf = Object.getPrototypeOf;\n/** Object.create */\nconst ObjectCreate = Object.create;\n/** Array.prototype.slice */\nconst ArraySlice = Array.prototype.slice;\n/** addEventListener string const */\nconst ADD_EVENT_LISTENER_STR = 'addEventListener';\n/** removeEventListener string const */\nconst REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n/** zoneSymbol addEventListener */\nconst ZONE_SYMBOL_ADD_EVENT_LISTENER = Zone.__symbol__(ADD_EVENT_LISTENER_STR);\n/** zoneSymbol removeEventListener */\nconst ZONE_SYMBOL_REMOVE_EVENT_LISTENER = Zone.__symbol__(REMOVE_EVENT_LISTENER_STR);\n/** true string const */\nconst TRUE_STR = 'true';\n/** false string const */\nconst FALSE_STR = 'false';\n/** Zone symbol prefix string const. */\nconst ZONE_SYMBOL_PREFIX = Zone.__symbol__('');\nfunction wrapWithCurrentZone(callback, source) {\n    return Zone.current.wrap(callback, source);\n}\nfunction scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n    return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n}\nconst zoneSymbol = Zone.__symbol__;\nconst isWindowExists = typeof window !== 'undefined';\nconst internalWindow = isWindowExists ? window : undefined;\nconst _global = isWindowExists && internalWindow || typeof self === 'object' && self || global;\nconst REMOVE_ATTRIBUTE = 'removeAttribute';\nconst NULL_ON_PROP_VALUE = [null];\nfunction bindArguments(args, source) {\n    for (let i = args.length - 1; i >= 0; i--) {\n        if (typeof args[i] === 'function') {\n            args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n        }\n    }\n    return args;\n}\nfunction patchPrototype(prototype, fnNames) {\n    const source = prototype.constructor['name'];\n    for (let i = 0; i < fnNames.length; i++) {\n        const name = fnNames[i];\n        const delegate = prototype[name];\n        if (delegate) {\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n            if (!isPropertyWritable(prototypeDesc)) {\n                continue;\n            }\n            prototype[name] = ((delegate) => {\n                const patched = function () {\n                    return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n                };\n                attachOriginToPatched(patched, delegate);\n                return patched;\n            })(delegate);\n        }\n    }\n}\nfunction isPropertyWritable(propertyDesc) {\n    if (!propertyDesc) {\n        return true;\n    }\n    if (propertyDesc.writable === false) {\n        return false;\n    }\n    return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n}\nconst isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isNode = (!('nw' in _global) && typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]');\nconst isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n// we are in electron of nw, so we are both browser and nodejs\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isMix = typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]' && !isWebWorker &&\n    !!(isWindowExists && internalWindow['HTMLElement']);\nconst zoneSymbolEventNames = {};\nconst wrapFn = function (event) {\n    // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n    // event will be undefined, so we need to use window.event\n    event = event || _global.event;\n    if (!event) {\n        return;\n    }\n    let eventNameSymbol = zoneSymbolEventNames[event.type];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n    }\n    const target = this || event.target || _global;\n    const listener = target[eventNameSymbol];\n    let result;\n    if (isBrowser && target === internalWindow && event.type === 'error') {\n        // window.onerror have different signiture\n        // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n        // and onerror callback will prevent default when callback return true\n        const errorEvent = event;\n        result = listener &&\n            listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n        if (result === true) {\n            event.preventDefault();\n        }\n    }\n    else {\n        result = listener && listener.apply(this, arguments);\n        if (result != undefined && !result) {\n            event.preventDefault();\n        }\n    }\n    return result;\n};\nfunction patchProperty(obj, prop, prototype) {\n    let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n    if (!desc && prototype) {\n        // when patch window object, use prototype to check prop exist or not\n        const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n        if (prototypeDesc) {\n            desc = { enumerable: true, configurable: true };\n        }\n    }\n    // if the descriptor not exists or is not configurable\n    // just return\n    if (!desc || !desc.configurable) {\n        return;\n    }\n    const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n    if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n        return;\n    }\n    // A property descriptor cannot have getter/setter and be writable\n    // deleting the writable and value properties avoids this error:\n    //\n    // TypeError: property descriptors must not specify a value or be writable when a\n    // getter or setter has been specified\n    delete desc.writable;\n    delete desc.value;\n    const originalDescGet = desc.get;\n    const originalDescSet = desc.set;\n    // substr(2) cuz 'onclick' -> 'click', etc\n    const eventName = prop.substr(2);\n    let eventNameSymbol = zoneSymbolEventNames[eventName];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n    }\n    desc.set = function (newValue) {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return;\n        }\n        let previousValue = target[eventNameSymbol];\n        if (previousValue) {\n            target.removeEventListener(eventName, wrapFn);\n        }\n        // issue #978, when onload handler was added before loading zone.js\n        // we should remove it with originalDescSet\n        if (originalDescSet) {\n            originalDescSet.apply(target, NULL_ON_PROP_VALUE);\n        }\n        if (typeof newValue === 'function') {\n            target[eventNameSymbol] = newValue;\n            target.addEventListener(eventName, wrapFn, false);\n        }\n        else {\n            target[eventNameSymbol] = null;\n        }\n    };\n    // The getter would return undefined for unassigned properties but the default value of an\n    // unassigned property is null\n    desc.get = function () {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return null;\n        }\n        const listener = target[eventNameSymbol];\n        if (listener) {\n            return listener;\n        }\n        else if (originalDescGet) {\n            // result will be null when use inline event attribute,\n            // such as <button onclick=\"func();\">OK</button>\n            // because the onclick function is internal raw uncompiled handler\n            // the onclick will be evaluated when first time event was triggered or\n            // the property is accessed, https://github.com/angular/zone.js/issues/525\n            // so we should use original native get to retrieve the handler\n            let value = originalDescGet && originalDescGet.call(this);\n            if (value) {\n                desc.set.call(this, value);\n                if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                    target.removeAttribute(prop);\n                }\n                return value;\n            }\n        }\n        return null;\n    };\n    ObjectDefineProperty(obj, prop, desc);\n    obj[onPropPatchedSymbol] = true;\n}\nfunction patchOnProperties(obj, properties, prototype) {\n    if (properties) {\n        for (let i = 0; i < properties.length; i++) {\n            patchProperty(obj, 'on' + properties[i], prototype);\n        }\n    }\n    else {\n        const onProperties = [];\n        for (const prop in obj) {\n            if (prop.substr(0, 2) == 'on') {\n                onProperties.push(prop);\n            }\n        }\n        for (let j = 0; j < onProperties.length; j++) {\n            patchProperty(obj, onProperties[j], prototype);\n        }\n    }\n}\nconst originalInstanceKey = zoneSymbol('originalInstance');\n// wrap some native API on `window`\nfunction patchClass(className) {\n    const OriginalClass = _global[className];\n    if (!OriginalClass)\n        return;\n    // keep original class in global\n    _global[zoneSymbol(className)] = OriginalClass;\n    _global[className] = function () {\n        const a = bindArguments(arguments, className);\n        switch (a.length) {\n            case 0:\n                this[originalInstanceKey] = new OriginalClass();\n                break;\n            case 1:\n                this[originalInstanceKey] = new OriginalClass(a[0]);\n                break;\n            case 2:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                break;\n            case 3:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                break;\n            case 4:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                break;\n            default:\n                throw new Error('Arg list too long.');\n        }\n    };\n    // attach original delegate to patched function\n    attachOriginToPatched(_global[className], OriginalClass);\n    const instance = new OriginalClass(function () { });\n    let prop;\n    for (prop in instance) {\n        // https://bugs.webkit.org/show_bug.cgi?id=44721\n        if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n            continue;\n        (function (prop) {\n            if (typeof instance[prop] === 'function') {\n                _global[className].prototype[prop] = function () {\n                    return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                };\n            }\n            else {\n                ObjectDefineProperty(_global[className].prototype, prop, {\n                    set: function (fn) {\n                        if (typeof fn === 'function') {\n                            this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                            // keep callback in wrapped function so we can\n                            // use it in Function.prototype.toString to return\n                            // the native one.\n                            attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                        }\n                        else {\n                            this[originalInstanceKey][prop] = fn;\n                        }\n                    },\n                    get: function () {\n                        return this[originalInstanceKey][prop];\n                    }\n                });\n            }\n        }(prop));\n    }\n    for (prop in OriginalClass) {\n        if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n            _global[className][prop] = OriginalClass[prop];\n        }\n    }\n}\nfunction patchMethod(target, name, patchFn) {\n    let proto = target;\n    while (proto && !proto.hasOwnProperty(name)) {\n        proto = ObjectGetPrototypeOf(proto);\n    }\n    if (!proto && target[name]) {\n        // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n        proto = target;\n    }\n    const delegateName = zoneSymbol(name);\n    let delegate = null;\n    if (proto && (!(delegate = proto[delegateName]) || !proto.hasOwnProperty(delegateName))) {\n        delegate = proto[delegateName] = proto[name];\n        // check whether proto[name] is writable\n        // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n        const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n        if (isPropertyWritable(desc)) {\n            const patchDelegate = patchFn(delegate, delegateName, name);\n            proto[name] = function () {\n                return patchDelegate(this, arguments);\n            };\n            attachOriginToPatched(proto[name], delegate);\n        }\n    }\n    return delegate;\n}\n// TODO: @JiaLiPassion, support cancel task later if necessary\nfunction patchMacroTask(obj, funcName, metaCreator) {\n    let setNative = null;\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[data.cbIdx] = function () {\n            task.invoke.apply(this, arguments);\n        };\n        setNative.apply(data.target, data.args);\n        return task;\n    }\n    setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n        const meta = metaCreator(self, args);\n        if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n            return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(self, args);\n        }\n    });\n}\nfunction attachOriginToPatched(patched, original) {\n    patched[zoneSymbol('OriginalDelegate')] = original;\n}\nlet isDetectedIEOrEdge = false;\nlet ieOrEdge = false;\nfunction isIE() {\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n            return true;\n        }\n    }\n    catch (error) {\n    }\n    return false;\n}\nfunction isIEOrEdge() {\n    if (isDetectedIEOrEdge) {\n        return ieOrEdge;\n    }\n    isDetectedIEOrEdge = true;\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n            ieOrEdge = true;\n        }\n    }\n    catch (error) {\n    }\n    return ieOrEdge;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n    const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    const ObjectDefineProperty = Object.defineProperty;\n    function readableObjectToString(obj) {\n        if (obj && obj.toString === Object.prototype.toString) {\n            const className = obj.constructor && obj.constructor.name;\n            return (className ? className : '') + ': ' + JSON.stringify(obj);\n        }\n        return obj ? obj.toString() : Object.prototype.toString.call(obj);\n    }\n    const __symbol__ = api.symbol;\n    const _uncaughtPromiseErrors = [];\n    const isDisableWrappingUncaughtPromiseRejection = global[__symbol__('DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION')] === true;\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    const creationTrace = '__creationTrace__';\n    api.onUnhandledError = (e) => {\n        if (api.showUncaughtError()) {\n            const rejection = e && e.rejection;\n            if (rejection) {\n                console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n            }\n            else {\n                console.error(e);\n            }\n        }\n    };\n    api.microtaskDrainDone = () => {\n        while (_uncaughtPromiseErrors.length) {\n            const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n            try {\n                uncaughtPromiseError.zone.runGuarded(() => {\n                    if (uncaughtPromiseError.throwOriginal) {\n                        throw uncaughtPromiseError.rejection;\n                    }\n                    throw uncaughtPromiseError;\n                });\n            }\n            catch (error) {\n                handleUnhandledRejection(error);\n            }\n        }\n    };\n    const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n    function handleUnhandledRejection(e) {\n        api.onUnhandledError(e);\n        try {\n            const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n            if (typeof handler === 'function') {\n                handler.call(this, e);\n            }\n        }\n        catch (err) {\n        }\n    }\n    function isThenable(value) {\n        return value && value.then;\n    }\n    function forwardResolution(value) {\n        return value;\n    }\n    function forwardRejection(rejection) {\n        return ZoneAwarePromise.reject(rejection);\n    }\n    const symbolState = __symbol__('state');\n    const symbolValue = __symbol__('value');\n    const symbolFinally = __symbol__('finally');\n    const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n    const symbolParentPromiseState = __symbol__('parentPromiseState');\n    const source = 'Promise.then';\n    const UNRESOLVED = null;\n    const RESOLVED = true;\n    const REJECTED = false;\n    const REJECTED_NO_CATCH = 0;\n    function makeResolver(promise, state) {\n        return (v) => {\n            try {\n                resolvePromise(promise, state, v);\n            }\n            catch (err) {\n                resolvePromise(promise, false, err);\n            }\n            // Do not return value or you will break the Promise spec.\n        };\n    }\n    const once = function () {\n        let wasCalled = false;\n        return function wrapper(wrappedFunction) {\n            return function () {\n                if (wasCalled) {\n                    return;\n                }\n                wasCalled = true;\n                wrappedFunction.apply(null, arguments);\n            };\n        };\n    };\n    const TYPE_ERROR = 'Promise resolved with itself';\n    const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n    // Promise Resolution\n    function resolvePromise(promise, state, value) {\n        const onceWrapper = once();\n        if (promise === value) {\n            throw new TypeError(TYPE_ERROR);\n        }\n        if (promise[symbolState] === UNRESOLVED) {\n            // should only get value.then once based on promise spec.\n            let then = null;\n            try {\n                if (typeof value === 'object' || typeof value === 'function') {\n                    then = value && value.then;\n                }\n            }\n            catch (err) {\n                onceWrapper(() => {\n                    resolvePromise(promise, false, err);\n                })();\n                return promise;\n            }\n            // if (value instanceof ZoneAwarePromise) {\n            if (state !== REJECTED && value instanceof ZoneAwarePromise &&\n                value.hasOwnProperty(symbolState) && value.hasOwnProperty(symbolValue) &&\n                value[symbolState] !== UNRESOLVED) {\n                clearRejectedNoCatch(value);\n                resolvePromise(promise, value[symbolState], value[symbolValue]);\n            }\n            else if (state !== REJECTED && typeof then === 'function') {\n                try {\n                    then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                }\n                catch (err) {\n                    onceWrapper(() => {\n                        resolvePromise(promise, false, err);\n                    })();\n                }\n            }\n            else {\n                promise[symbolState] = state;\n                const queue = promise[symbolValue];\n                promise[symbolValue] = value;\n                if (promise[symbolFinally] === symbolFinally) {\n                    // the promise is generated by Promise.prototype.finally\n                    if (state === RESOLVED) {\n                        // the state is resolved, should ignore the value\n                        // and use parent promise value\n                        promise[symbolState] = promise[symbolParentPromiseState];\n                        promise[symbolValue] = promise[symbolParentPromiseValue];\n                    }\n                }\n                // record task information in value when error occurs, so we can\n                // do some additional work such as render longStackTrace\n                if (state === REJECTED && value instanceof Error) {\n                    // check if longStackTraceZone is here\n                    const trace = Zone.currentTask && Zone.currentTask.data &&\n                        Zone.currentTask.data[creationTrace];\n                    if (trace) {\n                        // only keep the long stack trace into error when in longStackTraceZone\n                        ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, { configurable: true, enumerable: false, writable: true, value: trace });\n                    }\n                }\n                for (let i = 0; i < queue.length;) {\n                    scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                }\n                if (queue.length == 0 && state == REJECTED) {\n                    promise[symbolState] = REJECTED_NO_CATCH;\n                    let uncaughtPromiseError = value;\n                    try {\n                        // Here we throws a new Error to print more readable error log\n                        // and if the value is not an error, zone.js builds an `Error`\n                        // Object here to attach the stack information.\n                        throw new Error('Uncaught (in promise): ' + readableObjectToString(value) +\n                            (value && value.stack ? '\\n' + value.stack : ''));\n                    }\n                    catch (err) {\n                        uncaughtPromiseError = err;\n                    }\n                    if (isDisableWrappingUncaughtPromiseRejection) {\n                        // If disable wrapping uncaught promise reject\n                        // use the value instead of wrapping it.\n                        uncaughtPromiseError.throwOriginal = true;\n                    }\n                    uncaughtPromiseError.rejection = value;\n                    uncaughtPromiseError.promise = promise;\n                    uncaughtPromiseError.zone = Zone.current;\n                    uncaughtPromiseError.task = Zone.currentTask;\n                    _uncaughtPromiseErrors.push(uncaughtPromiseError);\n                    api.scheduleMicroTask(); // to make sure that it is running\n                }\n            }\n        }\n        // Resolving an already resolved promise is a noop.\n        return promise;\n    }\n    const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n    function clearRejectedNoCatch(promise) {\n        if (promise[symbolState] === REJECTED_NO_CATCH) {\n            // if the promise is rejected no catch status\n            // and queue.length > 0, means there is a error handler\n            // here to handle the rejected promise, we should trigger\n            // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n            // eventHandler\n            try {\n                const handler = Zone[REJECTION_HANDLED_HANDLER];\n                if (handler && typeof handler === 'function') {\n                    handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                }\n            }\n            catch (err) {\n            }\n            promise[symbolState] = REJECTED;\n            for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                if (promise === _uncaughtPromiseErrors[i].promise) {\n                    _uncaughtPromiseErrors.splice(i, 1);\n                }\n            }\n        }\n    }\n    function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n        clearRejectedNoCatch(promise);\n        const promiseState = promise[symbolState];\n        const delegate = promiseState ?\n            (typeof onFulfilled === 'function') ? onFulfilled : forwardResolution :\n            (typeof onRejected === 'function') ? onRejected : forwardRejection;\n        zone.scheduleMicroTask(source, () => {\n            try {\n                const parentPromiseValue = promise[symbolValue];\n                const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n                if (isFinallyPromise) {\n                    // if the promise is generated from finally call, keep parent promise's state and value\n                    chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                    chainPromise[symbolParentPromiseState] = promiseState;\n                }\n                // should not pass value to finally callback\n                const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution ?\n                    [] :\n                    [parentPromiseValue]);\n                resolvePromise(chainPromise, true, value);\n            }\n            catch (error) {\n                // if error occurs, should always return this error\n                resolvePromise(chainPromise, false, error);\n            }\n        }, chainPromise);\n    }\n    const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n    const noop = function () { };\n    class ZoneAwarePromise {\n        static toString() {\n            return ZONE_AWARE_PROMISE_TO_STRING;\n        }\n        static resolve(value) {\n            return resolvePromise(new this(null), RESOLVED, value);\n        }\n        static reject(error) {\n            return resolvePromise(new this(null), REJECTED, error);\n        }\n        static race(values) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            function onResolve(value) {\n                resolve(value);\n            }\n            function onReject(error) {\n                reject(error);\n            }\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                value.then(onResolve, onReject);\n            }\n            return promise;\n        }\n        static all(values) {\n            return ZoneAwarePromise.allWithCallback(values);\n        }\n        static allSettled(values) {\n            const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n            return P.allWithCallback(values, {\n                thenCallback: (value) => ({ status: 'fulfilled', value }),\n                errorCallback: (err) => ({ status: 'rejected', reason: err })\n            });\n        }\n        static allWithCallback(values, callback) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            // Start at 2 to prevent prematurely resolving if .then is called immediately.\n            let unresolvedCount = 2;\n            let valueIndex = 0;\n            const resolvedValues = [];\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                const curValueIndex = valueIndex;\n                try {\n                    value.then((value) => {\n                        resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n                        unresolvedCount--;\n                        if (unresolvedCount === 0) {\n                            resolve(resolvedValues);\n                        }\n                    }, (err) => {\n                        if (!callback) {\n                            reject(err);\n                        }\n                        else {\n                            resolvedValues[curValueIndex] = callback.errorCallback(err);\n                            unresolvedCount--;\n                            if (unresolvedCount === 0) {\n                                resolve(resolvedValues);\n                            }\n                        }\n                    });\n                }\n                catch (thenErr) {\n                    reject(thenErr);\n                }\n                unresolvedCount++;\n                valueIndex++;\n            }\n            // Make the unresolvedCount zero-based again.\n            unresolvedCount -= 2;\n            if (unresolvedCount === 0) {\n                resolve(resolvedValues);\n            }\n            return promise;\n        }\n        constructor(executor) {\n            const promise = this;\n            if (!(promise instanceof ZoneAwarePromise)) {\n                throw new Error('Must be an instanceof Promise.');\n            }\n            promise[symbolState] = UNRESOLVED;\n            promise[symbolValue] = []; // queue;\n            try {\n                executor && executor(makeResolver(promise, RESOLVED), makeResolver(promise, REJECTED));\n            }\n            catch (error) {\n                resolvePromise(promise, false, error);\n            }\n        }\n        get [Symbol.toStringTag]() {\n            return 'Promise';\n        }\n        get [Symbol.species]() {\n            return ZoneAwarePromise;\n        }\n        then(onFulfilled, onRejected) {\n            let C = this.constructor[Symbol.species];\n            if (!C || typeof C !== 'function') {\n                C = this.constructor || ZoneAwarePromise;\n            }\n            const chainPromise = new C(noop);\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n            }\n            return chainPromise;\n        }\n        catch(onRejected) {\n            return this.then(null, onRejected);\n        }\n        finally(onFinally) {\n            let C = this.constructor[Symbol.species];\n            if (!C || typeof C !== 'function') {\n                C = ZoneAwarePromise;\n            }\n            const chainPromise = new C(noop);\n            chainPromise[symbolFinally] = symbolFinally;\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n            }\n            return chainPromise;\n        }\n    }\n    // Protect against aggressive optimizers dropping seemingly unused properties.\n    // E.g. Closure Compiler in advanced mode.\n    ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n    ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n    ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n    ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n    const NativePromise = global[symbolPromise] = global['Promise'];\n    global['Promise'] = ZoneAwarePromise;\n    const symbolThenPatched = __symbol__('thenPatched');\n    function patchThen(Ctor) {\n        const proto = Ctor.prototype;\n        const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n        if (prop && (prop.writable === false || !prop.configurable)) {\n            // check Ctor.prototype.then propertyDescriptor is writable or not\n            // in meteor env, writable is false, we should ignore such case\n            return;\n        }\n        const originalThen = proto.then;\n        // Keep a reference to the original method.\n        proto[symbolThen] = originalThen;\n        Ctor.prototype.then = function (onResolve, onReject) {\n            const wrapped = new ZoneAwarePromise((resolve, reject) => {\n                originalThen.call(this, resolve, reject);\n            });\n            return wrapped.then(onResolve, onReject);\n        };\n        Ctor[symbolThenPatched] = true;\n    }\n    api.patchThen = patchThen;\n    function zoneify(fn) {\n        return function (self, args) {\n            let resultPromise = fn.apply(self, args);\n            if (resultPromise instanceof ZoneAwarePromise) {\n                return resultPromise;\n            }\n            let ctor = resultPromise.constructor;\n            if (!ctor[symbolThenPatched]) {\n                patchThen(ctor);\n            }\n            return resultPromise;\n        };\n    }\n    if (NativePromise) {\n        patchThen(NativePromise);\n        patchMethod(global, 'fetch', delegate => zoneify(delegate));\n    }\n    // This is not part of public API, but it is useful for tests, so we expose it.\n    Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n    return ZoneAwarePromise;\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// override Function.prototype.toString to make zone.js patched function\n// look like native function\nZone.__load_patch('toString', (global) => {\n    // patch Func.prototype.toString to let them look like native\n    const originalFunctionToString = Function.prototype.toString;\n    const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n    const PROMISE_SYMBOL = zoneSymbol('Promise');\n    const ERROR_SYMBOL = zoneSymbol('Error');\n    const newFunctionToString = function toString() {\n        if (typeof this === 'function') {\n            const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n            if (originalDelegate) {\n                if (typeof originalDelegate === 'function') {\n                    return originalFunctionToString.call(originalDelegate);\n                }\n                else {\n                    return Object.prototype.toString.call(originalDelegate);\n                }\n            }\n            if (this === Promise) {\n                const nativePromise = global[PROMISE_SYMBOL];\n                if (nativePromise) {\n                    return originalFunctionToString.call(nativePromise);\n                }\n            }\n            if (this === Error) {\n                const nativeError = global[ERROR_SYMBOL];\n                if (nativeError) {\n                    return originalFunctionToString.call(nativeError);\n                }\n            }\n        }\n        return originalFunctionToString.call(this);\n    };\n    newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n    Function.prototype.toString = newFunctionToString;\n    // patch Object.prototype.toString to let them look like native\n    const originalObjectToString = Object.prototype.toString;\n    const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n    Object.prototype.toString = function () {\n        if (typeof Promise === 'function' && this instanceof Promise) {\n            return PROMISE_OBJECT_TO_STRING;\n        }\n        return originalObjectToString.call(this);\n    };\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet passiveSupported = false;\nif (typeof window !== 'undefined') {\n    try {\n        const options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passiveSupported = true;\n            }\n        });\n        window.addEventListener('test', options, options);\n        window.removeEventListener('test', options, options);\n    }\n    catch (err) {\n        passiveSupported = false;\n    }\n}\n// an identifier to tell ZoneTask do not create a new invoke closure\nconst OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n    useG: true\n};\nconst zoneSymbolEventNames$1 = {};\nconst globalSources = {};\nconst EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\nconst IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\nfunction prepareEventNames(eventName, eventNameToString) {\n    const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n    const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n    const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n    const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n    zoneSymbolEventNames$1[eventName] = {};\n    zoneSymbolEventNames$1[eventName][FALSE_STR] = symbol;\n    zoneSymbolEventNames$1[eventName][TRUE_STR] = symbolCapture;\n}\nfunction patchEventTarget(_global, apis, patchOptions) {\n    const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n    const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n    const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n    const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n    const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n    const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n    const PREPEND_EVENT_LISTENER = 'prependListener';\n    const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n    const invokeTask = function (task, target, event) {\n        // for better performance, check isRemoved which is set\n        // by removeEventListener\n        if (task.isRemoved) {\n            return;\n        }\n        const delegate = task.callback;\n        if (typeof delegate === 'object' && delegate.handleEvent) {\n            // create the bind version of handleEvent when invoke\n            task.callback = (event) => delegate.handleEvent(event);\n            task.originalDelegate = delegate;\n        }\n        // invoke static task.invoke\n        task.invoke(task, target, [event]);\n        const options = task.options;\n        if (options && typeof options === 'object' && options.once) {\n            // if options.once is true, after invoke once remove listener here\n            // only browser need to do this, nodejs eventEmitter will cal removeListener\n            // inside EventEmitter.once\n            const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n            target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n        }\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = false\n    const globalZoneAwareCallback = function (event) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = this || event.target || _global;\n        const tasks = target[zoneSymbolEventNames$1[event.type][FALSE_STR]];\n        if (tasks) {\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                invokeTask(tasks[0], target, event);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    invokeTask(copyTasks[i], target, event);\n                }\n            }\n        }\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = true\n    const globalZoneAwareCaptureCallback = function (event) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = this || event.target || _global;\n        const tasks = target[zoneSymbolEventNames$1[event.type][TRUE_STR]];\n        if (tasks) {\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                invokeTask(tasks[0], target, event);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    invokeTask(copyTasks[i], target, event);\n                }\n            }\n        }\n    };\n    function patchEventTargetMethods(obj, patchOptions) {\n        if (!obj) {\n            return false;\n        }\n        let useGlobalCallback = true;\n        if (patchOptions && patchOptions.useG !== undefined) {\n            useGlobalCallback = patchOptions.useG;\n        }\n        const validateHandler = patchOptions && patchOptions.vh;\n        let checkDuplicate = true;\n        if (patchOptions && patchOptions.chkDup !== undefined) {\n            checkDuplicate = patchOptions.chkDup;\n        }\n        let returnTarget = false;\n        if (patchOptions && patchOptions.rt !== undefined) {\n            returnTarget = patchOptions.rt;\n        }\n        let proto = obj;\n        while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && obj[ADD_EVENT_LISTENER]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = obj;\n        }\n        if (!proto) {\n            return false;\n        }\n        if (proto[zoneSymbolAddEventListener]) {\n            return false;\n        }\n        const eventNameToString = patchOptions && patchOptions.eventNameToString;\n        // a shared global taskData to pass data for scheduleEventTask\n        // so we do not need to create a new object just for pass some data\n        const taskData = {};\n        const nativeAddEventListener = proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER];\n        const nativeRemoveEventListener = proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n            proto[REMOVE_EVENT_LISTENER];\n        const nativeListeners = proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n            proto[LISTENERS_EVENT_LISTENER];\n        const nativeRemoveAllListeners = proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];\n        let nativePrependEventListener;\n        if (patchOptions && patchOptions.prepend) {\n            nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                proto[patchOptions.prepend];\n        }\n        /**\n         * This util function will build an option object with passive option\n         * to handle all possible input from the user.\n         */\n        function buildEventListenerOptions(options, passive) {\n            if (!passiveSupported && typeof options === 'object' && options) {\n                // doesn't support passive but user want to pass an object as options.\n                // this will not work on some old browser, so we just pass a boolean\n                // as useCapture parameter\n                return !!options.capture;\n            }\n            if (!passiveSupported || !passive) {\n                return options;\n            }\n            if (typeof options === 'boolean') {\n                return { capture: options, passive: true };\n            }\n            if (!options) {\n                return { passive: true };\n            }\n            if (typeof options === 'object' && options.passive !== false) {\n                return Object.assign(Object.assign({}, options), { passive: true });\n            }\n            return options;\n        }\n        const customScheduleGlobal = function (task) {\n            // if there is already a task for the eventName + capture,\n            // just return, because we use the shared globalZoneAwareCallback here.\n            if (taskData.isExisting) {\n                return;\n            }\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n        };\n        const customCancelGlobal = function (task) {\n            // if task is not marked as isRemoved, this call is directly\n            // from Zone.prototype.cancelTask, we should remove the task\n            // from tasksList of target first\n            if (!task.isRemoved) {\n                const symbolEventNames = zoneSymbolEventNames$1[task.eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && task.target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (existingTask === task) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            task.isRemoved = true;\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                task.allRemoved = true;\n                                task.target[symbolEventName] = null;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n            // if all tasks for the eventName + capture have gone,\n            // we will really remove the global event callback,\n            // if not, return\n            if (!task.allRemoved) {\n                return;\n            }\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n        };\n        const customScheduleNonGlobal = function (task) {\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customSchedulePrepend = function (task) {\n            return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customCancelNonGlobal = function (task) {\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n        };\n        const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n        const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n        const compareTaskCallbackVsDelegate = function (task, delegate) {\n            const typeOfDelegate = typeof delegate;\n            return (typeOfDelegate === 'function' && task.callback === delegate) ||\n                (typeOfDelegate === 'object' && task.originalDelegate === delegate);\n        };\n        const compare = (patchOptions && patchOptions.diff) ? patchOptions.diff : compareTaskCallbackVsDelegate;\n        const unpatchedEvents = Zone[zoneSymbol('UNPATCHED_EVENTS')];\n        const passiveEvents = _global[zoneSymbol('PASSIVE_EVENTS')];\n        const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n            return function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                let delegate = arguments[1];\n                if (!delegate) {\n                    return nativeListener.apply(this, arguments);\n                }\n                if (isNode && eventName === 'uncaughtException') {\n                    // don't patch uncaughtException of nodejs to prevent endless loop\n                    return nativeListener.apply(this, arguments);\n                }\n                // don't create the bind delegate function for handleEvent\n                // case here to improve addEventListener performance\n                // we will create the bind delegate when invoke\n                let isHandleEvent = false;\n                if (typeof delegate !== 'function') {\n                    if (!delegate.handleEvent) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    isHandleEvent = true;\n                }\n                if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                    return;\n                }\n                const passive = passiveSupported && !!passiveEvents && passiveEvents.indexOf(eventName) !== -1;\n                const options = buildEventListenerOptions(arguments[2], passive);\n                if (unpatchedEvents) {\n                    // check upatched list\n                    for (let i = 0; i < unpatchedEvents.length; i++) {\n                        if (eventName === unpatchedEvents[i]) {\n                            if (passive) {\n                                return nativeListener.call(target, eventName, delegate, options);\n                            }\n                            else {\n                                return nativeListener.apply(this, arguments);\n                            }\n                        }\n                    }\n                }\n                const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                const once = options && typeof options === 'object' ? options.once : false;\n                const zone = Zone.current;\n                let symbolEventNames = zoneSymbolEventNames$1[eventName];\n                if (!symbolEventNames) {\n                    prepareEventNames(eventName, eventNameToString);\n                    symbolEventNames = zoneSymbolEventNames$1[eventName];\n                }\n                const symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                let existingTasks = target[symbolEventName];\n                let isExisting = false;\n                if (existingTasks) {\n                    // already have task registered\n                    isExisting = true;\n                    if (checkDuplicate) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            if (compare(existingTasks[i], delegate)) {\n                                // same callback, same capture, same event name, just return\n                                return;\n                            }\n                        }\n                    }\n                }\n                else {\n                    existingTasks = target[symbolEventName] = [];\n                }\n                let source;\n                const constructorName = target.constructor['name'];\n                const targetSource = globalSources[constructorName];\n                if (targetSource) {\n                    source = targetSource[eventName];\n                }\n                if (!source) {\n                    source = constructorName + addSource +\n                        (eventNameToString ? eventNameToString(eventName) : eventName);\n                }\n                // do not create a new object as task.data to pass those things\n                // just use the global shared one\n                taskData.options = options;\n                if (once) {\n                    // if addEventListener with once options, we don't pass it to\n                    // native addEventListener, instead we keep the once setting\n                    // and handle ourselves.\n                    taskData.options.once = false;\n                }\n                taskData.target = target;\n                taskData.capture = capture;\n                taskData.eventName = eventName;\n                taskData.isExisting = isExisting;\n                const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                // keep taskData into data to allow onScheduleEventTask to access the task information\n                if (data) {\n                    data.taskData = taskData;\n                }\n                const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                // should clear taskData.target to avoid memory leak\n                // issue, https://github.com/angular/angular/issues/20442\n                taskData.target = null;\n                // need to clear up taskData because it is a global object\n                if (data) {\n                    data.taskData = null;\n                }\n                // have to save those information to task in case\n                // application may call task.zone.cancelTask() directly\n                if (once) {\n                    options.once = true;\n                }\n                if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                    // if not support passive, and we pass an option object\n                    // to addEventListener, we should save the options to task\n                    task.options = options;\n                }\n                task.target = target;\n                task.capture = capture;\n                task.eventName = eventName;\n                if (isHandleEvent) {\n                    // save original delegate for compare to check duplicate\n                    task.originalDelegate = delegate;\n                }\n                if (!prepend) {\n                    existingTasks.push(task);\n                }\n                else {\n                    existingTasks.unshift(task);\n                }\n                if (returnTarget) {\n                    return target;\n                }\n            };\n        };\n        proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n        if (nativePrependEventListener) {\n            proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n        }\n        proto[REMOVE_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const options = arguments[2];\n            const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n            const delegate = arguments[1];\n            if (!delegate) {\n                return nativeRemoveEventListener.apply(this, arguments);\n            }\n            if (validateHandler &&\n                !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                return;\n            }\n            const symbolEventNames = zoneSymbolEventNames$1[eventName];\n            let symbolEventName;\n            if (symbolEventNames) {\n                symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n            }\n            const existingTasks = symbolEventName && target[symbolEventName];\n            if (existingTasks) {\n                for (let i = 0; i < existingTasks.length; i++) {\n                    const existingTask = existingTasks[i];\n                    if (compare(existingTask, delegate)) {\n                        existingTasks.splice(i, 1);\n                        // set isRemoved to data for faster invokeTask check\n                        existingTask.isRemoved = true;\n                        if (existingTasks.length === 0) {\n                            // all tasks for the eventName + capture have gone,\n                            // remove globalZoneAwareCallback and remove the task cache from target\n                            existingTask.allRemoved = true;\n                            target[symbolEventName] = null;\n                            // in the target, we have an event listener which is added by on_property\n                            // such as target.onclick = function() {}, so we need to clear this internal\n                            // property too if all delegates all removed\n                            if (typeof eventName === 'string') {\n                                const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                target[onPropertySymbol] = null;\n                            }\n                        }\n                        existingTask.zone.cancelTask(existingTask);\n                        if (returnTarget) {\n                            return target;\n                        }\n                        return;\n                    }\n                }\n            }\n            // issue 930, didn't find the event name or callback\n            // from zone kept existingTasks, the callback maybe\n            // added outside of zone, we need to call native removeEventListener\n            // to try to remove it.\n            return nativeRemoveEventListener.apply(this, arguments);\n        };\n        proto[LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const listeners = [];\n            const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n            for (let i = 0; i < tasks.length; i++) {\n                const task = tasks[i];\n                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                listeners.push(delegate);\n            }\n            return listeners;\n        };\n        proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (!eventName) {\n                const keys = Object.keys(target);\n                for (let i = 0; i < keys.length; i++) {\n                    const prop = keys[i];\n                    const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                    let evtName = match && match[1];\n                    // in nodejs EventEmitter, removeListener event is\n                    // used for monitoring the removeListener call,\n                    // so just keep removeListener eventListener until\n                    // all other eventListeners are removed\n                    if (evtName && evtName !== 'removeListener') {\n                        this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                    }\n                }\n                // remove removeListener listener finally\n                this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n            }\n            else {\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const symbolEventNames = zoneSymbolEventNames$1[eventName];\n                if (symbolEventNames) {\n                    const symbolEventName = symbolEventNames[FALSE_STR];\n                    const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                    const tasks = target[symbolEventName];\n                    const captureTasks = target[symbolCaptureEventName];\n                    if (tasks) {\n                        const removeTasks = tasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                    if (captureTasks) {\n                        const removeTasks = captureTasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                }\n            }\n            if (returnTarget) {\n                return this;\n            }\n        };\n        // for native toString patch\n        attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n        attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n        if (nativeRemoveAllListeners) {\n            attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n        }\n        if (nativeListeners) {\n            attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n        }\n        return true;\n    }\n    let results = [];\n    for (let i = 0; i < apis.length; i++) {\n        results[i] = patchEventTargetMethods(apis[i], patchOptions);\n    }\n    return results;\n}\nfunction findEventTasks(target, eventName) {\n    if (!eventName) {\n        const foundTasks = [];\n        for (let prop in target) {\n            const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n            let evtName = match && match[1];\n            if (evtName && (!eventName || evtName === eventName)) {\n                const tasks = target[prop];\n                if (tasks) {\n                    for (let i = 0; i < tasks.length; i++) {\n                        foundTasks.push(tasks[i]);\n                    }\n                }\n            }\n        }\n        return foundTasks;\n    }\n    let symbolEventName = zoneSymbolEventNames$1[eventName];\n    if (!symbolEventName) {\n        prepareEventNames(eventName);\n        symbolEventName = zoneSymbolEventNames$1[eventName];\n    }\n    const captureFalseTasks = target[symbolEventName[FALSE_STR]];\n    const captureTrueTasks = target[symbolEventName[TRUE_STR]];\n    if (!captureFalseTasks) {\n        return captureTrueTasks ? captureTrueTasks.slice() : [];\n    }\n    else {\n        return captureTrueTasks ? captureFalseTasks.concat(captureTrueTasks) :\n            captureFalseTasks.slice();\n    }\n}\nfunction patchEventPrototype(global, api) {\n    const Event = global['Event'];\n    if (Event && Event.prototype) {\n        api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\n            self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n            // we need to call the native stopImmediatePropagation\n            // in case in some hybrid application, some part of\n            // application will be controlled by zone, some are not\n            delegate && delegate.apply(self, args);\n        });\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction patchCallbacks(api, target, targetName, method, callbacks) {\n    const symbol = Zone.__symbol__(method);\n    if (target[symbol]) {\n        return;\n    }\n    const nativeDelegate = target[symbol] = target[method];\n    target[method] = function (name, opts, options) {\n        if (opts && opts.prototype) {\n            callbacks.forEach(function (callback) {\n                const source = `${targetName}.${method}::` + callback;\n                const prototype = opts.prototype;\n                if (prototype.hasOwnProperty(callback)) {\n                    const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                    if (descriptor && descriptor.value) {\n                        descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                        api._redefineProperty(opts.prototype, callback, descriptor);\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                    }\n                }\n                else if (prototype[callback]) {\n                    prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                }\n            });\n        }\n        return nativeDelegate.call(target, name, opts, options);\n    };\n    api.attachOriginToPatched(target[method], nativeDelegate);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst globalEventHandlersEventNames = [\n    'abort',\n    'animationcancel',\n    'animationend',\n    'animationiteration',\n    'auxclick',\n    'beforeinput',\n    'blur',\n    'cancel',\n    'canplay',\n    'canplaythrough',\n    'change',\n    'compositionstart',\n    'compositionupdate',\n    'compositionend',\n    'cuechange',\n    'click',\n    'close',\n    'contextmenu',\n    'curechange',\n    'dblclick',\n    'drag',\n    'dragend',\n    'dragenter',\n    'dragexit',\n    'dragleave',\n    'dragover',\n    'drop',\n    'durationchange',\n    'emptied',\n    'ended',\n    'error',\n    'focus',\n    'focusin',\n    'focusout',\n    'gotpointercapture',\n    'input',\n    'invalid',\n    'keydown',\n    'keypress',\n    'keyup',\n    'load',\n    'loadstart',\n    'loadeddata',\n    'loadedmetadata',\n    'lostpointercapture',\n    'mousedown',\n    'mouseenter',\n    'mouseleave',\n    'mousemove',\n    'mouseout',\n    'mouseover',\n    'mouseup',\n    'mousewheel',\n    'orientationchange',\n    'pause',\n    'play',\n    'playing',\n    'pointercancel',\n    'pointerdown',\n    'pointerenter',\n    'pointerleave',\n    'pointerlockchange',\n    'mozpointerlockchange',\n    'webkitpointerlockerchange',\n    'pointerlockerror',\n    'mozpointerlockerror',\n    'webkitpointerlockerror',\n    'pointermove',\n    'pointout',\n    'pointerover',\n    'pointerup',\n    'progress',\n    'ratechange',\n    'reset',\n    'resize',\n    'scroll',\n    'seeked',\n    'seeking',\n    'select',\n    'selectionchange',\n    'selectstart',\n    'show',\n    'sort',\n    'stalled',\n    'submit',\n    'suspend',\n    'timeupdate',\n    'volumechange',\n    'touchcancel',\n    'touchmove',\n    'touchstart',\n    'touchend',\n    'transitioncancel',\n    'transitionend',\n    'waiting',\n    'wheel'\n];\nconst documentEventNames = [\n    'afterscriptexecute', 'beforescriptexecute', 'DOMContentLoaded', 'freeze', 'fullscreenchange',\n    'mozfullscreenchange', 'webkitfullscreenchange', 'msfullscreenchange', 'fullscreenerror',\n    'mozfullscreenerror', 'webkitfullscreenerror', 'msfullscreenerror', 'readystatechange',\n    'visibilitychange', 'resume'\n];\nconst windowEventNames = [\n    'absolutedeviceorientation',\n    'afterinput',\n    'afterprint',\n    'appinstalled',\n    'beforeinstallprompt',\n    'beforeprint',\n    'beforeunload',\n    'devicelight',\n    'devicemotion',\n    'deviceorientation',\n    'deviceorientationabsolute',\n    'deviceproximity',\n    'hashchange',\n    'languagechange',\n    'message',\n    'mozbeforepaint',\n    'offline',\n    'online',\n    'paint',\n    'pageshow',\n    'pagehide',\n    'popstate',\n    'rejectionhandled',\n    'storage',\n    'unhandledrejection',\n    'unload',\n    'userproximity',\n    'vrdisplayconnected',\n    'vrdisplaydisconnected',\n    'vrdisplaypresentchange'\n];\nconst htmlElementEventNames = [\n    'beforecopy', 'beforecut', 'beforepaste', 'copy', 'cut', 'paste', 'dragstart', 'loadend',\n    'animationstart', 'search', 'transitionrun', 'transitionstart', 'webkitanimationend',\n    'webkitanimationiteration', 'webkitanimationstart', 'webkittransitionend'\n];\nconst mediaElementEventNames = ['encrypted', 'waitingforkey', 'msneedkey', 'mozinterruptbegin', 'mozinterruptend'];\nconst ieElementEventNames = [\n    'activate',\n    'afterupdate',\n    'ariarequest',\n    'beforeactivate',\n    'beforedeactivate',\n    'beforeeditfocus',\n    'beforeupdate',\n    'cellchange',\n    'controlselect',\n    'dataavailable',\n    'datasetchanged',\n    'datasetcomplete',\n    'errorupdate',\n    'filterchange',\n    'layoutcomplete',\n    'losecapture',\n    'move',\n    'moveend',\n    'movestart',\n    'propertychange',\n    'resizeend',\n    'resizestart',\n    'rowenter',\n    'rowexit',\n    'rowsdelete',\n    'rowsinserted',\n    'command',\n    'compassneedscalibration',\n    'deactivate',\n    'help',\n    'mscontentzoom',\n    'msmanipulationstatechanged',\n    'msgesturechange',\n    'msgesturedoubletap',\n    'msgestureend',\n    'msgesturehold',\n    'msgesturestart',\n    'msgesturetap',\n    'msgotpointercapture',\n    'msinertiastart',\n    'mslostpointercapture',\n    'mspointercancel',\n    'mspointerdown',\n    'mspointerenter',\n    'mspointerhover',\n    'mspointerleave',\n    'mspointermove',\n    'mspointerout',\n    'mspointerover',\n    'mspointerup',\n    'pointerout',\n    'mssitemodejumplistitemremoved',\n    'msthumbnailclick',\n    'stop',\n    'storagecommit'\n];\nconst webglEventNames = ['webglcontextrestored', 'webglcontextlost', 'webglcontextcreationerror'];\nconst formEventNames = ['autocomplete', 'autocompleteerror'];\nconst detailEventNames = ['toggle'];\nconst frameEventNames = ['load'];\nconst frameSetEventNames = ['blur', 'error', 'focus', 'load', 'resize', 'scroll', 'messageerror'];\nconst marqueeEventNames = ['bounce', 'finish', 'start'];\nconst XMLHttpRequestEventNames = [\n    'loadstart', 'progress', 'abort', 'error', 'load', 'progress', 'timeout', 'loadend',\n    'readystatechange'\n];\nconst IDBIndexEventNames = ['upgradeneeded', 'complete', 'abort', 'success', 'error', 'blocked', 'versionchange', 'close'];\nconst websocketEventNames = ['close', 'error', 'open', 'message'];\nconst workerEventNames = ['error', 'message'];\nconst eventNames = globalEventHandlersEventNames.concat(webglEventNames, formEventNames, detailEventNames, documentEventNames, windowEventNames, htmlElementEventNames, ieElementEventNames);\nfunction filterProperties(target, onProperties, ignoreProperties) {\n    if (!ignoreProperties || ignoreProperties.length === 0) {\n        return onProperties;\n    }\n    const tip = ignoreProperties.filter(ip => ip.target === target);\n    if (!tip || tip.length === 0) {\n        return onProperties;\n    }\n    const targetIgnoreProperties = tip[0].ignoreProperties;\n    return onProperties.filter(op => targetIgnoreProperties.indexOf(op) === -1);\n}\nfunction patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n    // check whether target is available, sometimes target will be undefined\n    // because different browser or some 3rd party plugin.\n    if (!target) {\n        return;\n    }\n    const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n    patchOnProperties(target, filteredProperties, prototype);\n}\nfunction propertyDescriptorPatch(api, _global) {\n    if (isNode && !isMix) {\n        return;\n    }\n    if (Zone[api.symbol('patchEvents')]) {\n        // events are already been patched by legacy patch.\n        return;\n    }\n    const supportsWebSocket = typeof WebSocket !== 'undefined';\n    const ignoreProperties = _global['__Zone_ignore_on_properties'];\n    // for browsers that we can patch the descriptor:  Chrome & Firefox\n    if (isBrowser) {\n        const internalWindow = window;\n        const ignoreErrorProperties = isIE() ? [{ target: internalWindow, ignoreProperties: ['error'] }] : [];\n        // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n        // so we need to pass WindowPrototype to check onProp exist or not\n        patchFilteredProperties(internalWindow, eventNames.concat(['messageerror']), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n        patchFilteredProperties(Document.prototype, eventNames, ignoreProperties);\n        if (typeof internalWindow['SVGElement'] !== 'undefined') {\n            patchFilteredProperties(internalWindow['SVGElement'].prototype, eventNames, ignoreProperties);\n        }\n        patchFilteredProperties(Element.prototype, eventNames, ignoreProperties);\n        patchFilteredProperties(HTMLElement.prototype, eventNames, ignoreProperties);\n        patchFilteredProperties(HTMLMediaElement.prototype, mediaElementEventNames, ignoreProperties);\n        patchFilteredProperties(HTMLFrameSetElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n        patchFilteredProperties(HTMLBodyElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n        patchFilteredProperties(HTMLFrameElement.prototype, frameEventNames, ignoreProperties);\n        patchFilteredProperties(HTMLIFrameElement.prototype, frameEventNames, ignoreProperties);\n        const HTMLMarqueeElement = internalWindow['HTMLMarqueeElement'];\n        if (HTMLMarqueeElement) {\n            patchFilteredProperties(HTMLMarqueeElement.prototype, marqueeEventNames, ignoreProperties);\n        }\n        const Worker = internalWindow['Worker'];\n        if (Worker) {\n            patchFilteredProperties(Worker.prototype, workerEventNames, ignoreProperties);\n        }\n    }\n    const XMLHttpRequest = _global['XMLHttpRequest'];\n    if (XMLHttpRequest) {\n        // XMLHttpRequest is not available in ServiceWorker, so we need to check here\n        patchFilteredProperties(XMLHttpRequest.prototype, XMLHttpRequestEventNames, ignoreProperties);\n    }\n    const XMLHttpRequestEventTarget = _global['XMLHttpRequestEventTarget'];\n    if (XMLHttpRequestEventTarget) {\n        patchFilteredProperties(XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype, XMLHttpRequestEventNames, ignoreProperties);\n    }\n    if (typeof IDBIndex !== 'undefined') {\n        patchFilteredProperties(IDBIndex.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBOpenDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBDatabase.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBTransaction.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBCursor.prototype, IDBIndexEventNames, ignoreProperties);\n    }\n    if (supportsWebSocket) {\n        patchFilteredProperties(WebSocket.prototype, websocketEventNames, ignoreProperties);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('util', (global, Zone, api) => {\n    api.patchOnProperties = patchOnProperties;\n    api.patchMethod = patchMethod;\n    api.bindArguments = bindArguments;\n    api.patchMacroTask = patchMacroTask;\n    // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS` to\n    // define which events will not be patched by `Zone.js`.\n    // In newer version (>=0.9.0), we change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep\n    // the name consistent with angular repo.\n    // The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be supported for\n    // backwards compatibility.\n    const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n    const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n    if (global[SYMBOL_UNPATCHED_EVENTS]) {\n        global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n    }\n    if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n        Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n            global[SYMBOL_BLACK_LISTED_EVENTS];\n    }\n    api.patchEventPrototype = patchEventPrototype;\n    api.patchEventTarget = patchEventTarget;\n    api.isIEOrEdge = isIEOrEdge;\n    api.ObjectDefineProperty = ObjectDefineProperty;\n    api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n    api.ObjectCreate = ObjectCreate;\n    api.ArraySlice = ArraySlice;\n    api.patchClass = patchClass;\n    api.wrapWithCurrentZone = wrapWithCurrentZone;\n    api.filterProperties = filterProperties;\n    api.attachOriginToPatched = attachOriginToPatched;\n    api._redefineProperty = Object.defineProperty;\n    api.patchCallbacks = patchCallbacks;\n    api.getGlobalObjects = () => ({\n        globalSources,\n        zoneSymbolEventNames: zoneSymbolEventNames$1,\n        eventNames,\n        isBrowser,\n        isMix,\n        isNode,\n        TRUE_STR,\n        FALSE_STR,\n        ZONE_SYMBOL_PREFIX,\n        ADD_EVENT_LISTENER_STR,\n        REMOVE_EVENT_LISTENER_STR\n    });\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst taskSymbol = zoneSymbol('zoneTask');\nfunction patchTimer(window, setName, cancelName, nameSuffix) {\n    let setNative = null;\n    let clearNative = null;\n    setName += nameSuffix;\n    cancelName += nameSuffix;\n    const tasksByHandleId = {};\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[0] = function () {\n            return task.invoke.apply(this, arguments);\n        };\n        data.handleId = setNative.apply(window, data.args);\n        return task;\n    }\n    function clearTask(task) {\n        return clearNative.call(window, task.data.handleId);\n    }\n    setNative =\n        patchMethod(window, setName, (delegate) => function (self, args) {\n            if (typeof args[0] === 'function') {\n                const options = {\n                    isPeriodic: nameSuffix === 'Interval',\n                    delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 :\n                        undefined,\n                    args: args\n                };\n                const callback = args[0];\n                args[0] = function timer() {\n                    try {\n                        return callback.apply(this, arguments);\n                    }\n                    finally {\n                        // issue-934, task will be cancelled\n                        // even it is a periodic task such as\n                        // setInterval\n                        // https://github.com/angular/angular/issues/40387\n                        // Cleanup tasksByHandleId should be handled before scheduleTask\n                        // Since some zoneSpec may intercept and doesn't trigger\n                        // scheduleFn(scheduleTask) provided here.\n                        if (!(options.isPeriodic)) {\n                            if (typeof options.handleId === 'number') {\n                                // in non-nodejs env, we remove timerId\n                                // from local cache\n                                delete tasksByHandleId[options.handleId];\n                            }\n                            else if (options.handleId) {\n                                // Node returns complex objects as handleIds\n                                // we remove task reference from timer object\n                                options.handleId[taskSymbol] = null;\n                            }\n                        }\n                    }\n                };\n                const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n                if (!task) {\n                    return task;\n                }\n                // Node.js must additionally support the ref and unref functions.\n                const handle = task.data.handleId;\n                if (typeof handle === 'number') {\n                    // for non nodejs env, we save handleId: task\n                    // mapping in local cache for clearTimeout\n                    tasksByHandleId[handle] = task;\n                }\n                else if (handle) {\n                    // for nodejs env, we save task\n                    // reference in timerId Object for clearTimeout\n                    handle[taskSymbol] = task;\n                }\n                // check whether handle is null, because some polyfill or browser\n                // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n                if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' &&\n                    typeof handle.unref === 'function') {\n                    task.ref = handle.ref.bind(handle);\n                    task.unref = handle.unref.bind(handle);\n                }\n                if (typeof handle === 'number' || handle) {\n                    return handle;\n                }\n                return task;\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(window, args);\n            }\n        });\n    clearNative =\n        patchMethod(window, cancelName, (delegate) => function (self, args) {\n            const id = args[0];\n            let task;\n            if (typeof id === 'number') {\n                // non nodejs env.\n                task = tasksByHandleId[id];\n            }\n            else {\n                // nodejs env.\n                task = id && id[taskSymbol];\n                // other environments.\n                if (!task) {\n                    task = id;\n                }\n            }\n            if (task && typeof task.type === 'string') {\n                if (task.state !== 'notScheduled' &&\n                    (task.cancelFn && task.data.isPeriodic || task.runCount === 0)) {\n                    if (typeof id === 'number') {\n                        delete tasksByHandleId[id];\n                    }\n                    else if (id) {\n                        id[taskSymbol] = null;\n                    }\n                    // Do not cancel already canceled functions\n                    task.zone.cancelTask(task);\n                }\n            }\n            else {\n                // cause an error by calling it directly.\n                delegate.apply(window, args);\n            }\n        });\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction patchCustomElements(_global, api) {\n    const { isBrowser, isMix } = api.getGlobalObjects();\n    if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n        return;\n    }\n    const callbacks = ['connectedCallback', 'disconnectedCallback', 'adoptedCallback', 'attributeChangedCallback'];\n    api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction eventTargetPatch(_global, api) {\n    if (Zone[api.symbol('patchEventTarget')]) {\n        // EventTarget is already patched.\n        return;\n    }\n    const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\n    //  predefine all __zone_symbol__ + eventName + true/false string\n    for (let i = 0; i < eventNames.length; i++) {\n        const eventName = eventNames[i];\n        const falseEventName = eventName + FALSE_STR;\n        const trueEventName = eventName + TRUE_STR;\n        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n        zoneSymbolEventNames[eventName] = {};\n        zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n        zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n    }\n    const EVENT_TARGET = _global['EventTarget'];\n    if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n        return;\n    }\n    api.patchEventTarget(_global, [EVENT_TARGET && EVENT_TARGET.prototype]);\n    return true;\n}\nfunction patchEvent(global, api) {\n    api.patchEventPrototype(global, api);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('legacy', (global) => {\n    const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n    if (legacyPatch) {\n        legacyPatch();\n    }\n});\nZone.__load_patch('queueMicrotask', (global, Zone, api) => {\n    api.patchMethod(global, 'queueMicrotask', delegate => {\n        return function (self, args) {\n            Zone.current.scheduleMicroTask('queueMicrotask', args[0]);\n        };\n    });\n});\nZone.__load_patch('timers', (global) => {\n    const set = 'set';\n    const clear = 'clear';\n    patchTimer(global, set, clear, 'Timeout');\n    patchTimer(global, set, clear, 'Interval');\n    patchTimer(global, set, clear, 'Immediate');\n});\nZone.__load_patch('requestAnimationFrame', (global) => {\n    patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n    patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n    patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n});\nZone.__load_patch('blocking', (global, Zone) => {\n    const blockingMethods = ['alert', 'prompt', 'confirm'];\n    for (let i = 0; i < blockingMethods.length; i++) {\n        const name = blockingMethods[i];\n        patchMethod(global, name, (delegate, symbol, name) => {\n            return function (s, args) {\n                return Zone.current.run(delegate, global, args, name);\n            };\n        });\n    }\n});\nZone.__load_patch('EventTarget', (global, Zone, api) => {\n    patchEvent(global, api);\n    eventTargetPatch(global, api);\n    // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n    const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n    if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n        api.patchEventTarget(global, [XMLHttpRequestEventTarget.prototype]);\n    }\n});\nZone.__load_patch('MutationObserver', (global, Zone, api) => {\n    patchClass('MutationObserver');\n    patchClass('WebKitMutationObserver');\n});\nZone.__load_patch('IntersectionObserver', (global, Zone, api) => {\n    patchClass('IntersectionObserver');\n});\nZone.__load_patch('FileReader', (global, Zone, api) => {\n    patchClass('FileReader');\n});\nZone.__load_patch('on_property', (global, Zone, api) => {\n    propertyDescriptorPatch(api, global);\n});\nZone.__load_patch('customElements', (global, Zone, api) => {\n    patchCustomElements(global, api);\n});\nZone.__load_patch('XHR', (global, Zone) => {\n    // Treat XMLHttpRequest as a macrotask.\n    patchXHR(global);\n    const XHR_TASK = zoneSymbol('xhrTask');\n    const XHR_SYNC = zoneSymbol('xhrSync');\n    const XHR_LISTENER = zoneSymbol('xhrListener');\n    const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n    const XHR_URL = zoneSymbol('xhrURL');\n    const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n    function patchXHR(window) {\n        const XMLHttpRequest = window['XMLHttpRequest'];\n        if (!XMLHttpRequest) {\n            // XMLHttpRequest is not available in service worker\n            return;\n        }\n        const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n        function findPendingTask(target) {\n            return target[XHR_TASK];\n        }\n        let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n        let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n        if (!oriAddListener) {\n            const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n            if (XMLHttpRequestEventTarget) {\n                const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n        }\n        const READY_STATE_CHANGE = 'readystatechange';\n        const SCHEDULED = 'scheduled';\n        function scheduleTask(task) {\n            const data = task.data;\n            const target = data.target;\n            target[XHR_SCHEDULED] = false;\n            target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n            // remove existing event listener\n            const listener = target[XHR_LISTENER];\n            if (!oriAddListener) {\n                oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n            if (listener) {\n                oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n            }\n            const newListener = target[XHR_LISTENER] = () => {\n                if (target.readyState === target.DONE) {\n                    // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                    // readyState=4 multiple times, so we need to check task state here\n                    if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                        // check whether the xhr has registered onload listener\n                        // if that is the case, the task should invoke after all\n                        // onload listeners finish.\n                        // Also if the request failed without response (status = 0), the load event handler\n                        // will not be triggered, in that case, we should also invoke the placeholder callback\n                        // to close the XMLHttpRequest::send macroTask.\n                        // https://github.com/angular/angular/issues/38795\n                        const loadTasks = target[Zone.__symbol__('loadfalse')];\n                        if (target.status !== 0 && loadTasks && loadTasks.length > 0) {\n                            const oriInvoke = task.invoke;\n                            task.invoke = function () {\n                                // need to load the tasks again, because in other\n                                // load listener, they may remove themselves\n                                const loadTasks = target[Zone.__symbol__('loadfalse')];\n                                for (let i = 0; i < loadTasks.length; i++) {\n                                    if (loadTasks[i] === task) {\n                                        loadTasks.splice(i, 1);\n                                    }\n                                }\n                                if (!data.aborted && task.state === SCHEDULED) {\n                                    oriInvoke.call(task);\n                                }\n                            };\n                            loadTasks.push(task);\n                        }\n                        else {\n                            task.invoke();\n                        }\n                    }\n                    else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                        // error occurs when xhr.send()\n                        target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                    }\n                }\n            };\n            oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n            const storedTask = target[XHR_TASK];\n            if (!storedTask) {\n                target[XHR_TASK] = task;\n            }\n            sendNative.apply(target, data.args);\n            target[XHR_SCHEDULED] = true;\n            return task;\n        }\n        function placeholderCallback() { }\n        function clearTask(task) {\n            const data = task.data;\n            // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n            // to prevent it from firing. So instead, we store info for the event listener.\n            data.aborted = true;\n            return abortNative.apply(data.target, data.args);\n        }\n        const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n            self[XHR_SYNC] = args[2] == false;\n            self[XHR_URL] = args[1];\n            return openNative.apply(self, args);\n        });\n        const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n        const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n        const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n        const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n            if (Zone.current[fetchTaskScheduling] === true) {\n                // a fetch is scheduling, so we are using xhr to polyfill fetch\n                // and because we already schedule macroTask for fetch, we should\n                // not schedule a macroTask for xhr again\n                return sendNative.apply(self, args);\n            }\n            if (self[XHR_SYNC]) {\n                // if the XHR is sync there is no task to schedule, just execute the code.\n                return sendNative.apply(self, args);\n            }\n            else {\n                const options = { target: self, url: self[XHR_URL], isPeriodic: false, args: args, aborted: false };\n                const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                if (self && self[XHR_ERROR_BEFORE_SCHEDULED] === true && !options.aborted &&\n                    task.state === SCHEDULED) {\n                    // xhr request throw error when send\n                    // we should invoke task instead of leaving a scheduled\n                    // pending macroTask\n                    task.invoke();\n                }\n            }\n        });\n        const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n            const task = findPendingTask(self);\n            if (task && typeof task.type == 'string') {\n                // If the XHR has already completed, do nothing.\n                // If the XHR has already been aborted, do nothing.\n                // Fix #569, call abort multiple times before done will cause\n                // macroTask task count be negative number\n                if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                    return;\n                }\n                task.zone.cancelTask(task);\n            }\n            else if (Zone.current[fetchTaskAborting] === true) {\n                // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                return abortNative.apply(self, args);\n            }\n            // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n            // task\n            // to cancel. Do nothing.\n        });\n    }\n});\nZone.__load_patch('geolocation', (global) => {\n    /// GEO_LOCATION\n    if (global['navigator'] && global['navigator'].geolocation) {\n        patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n    }\n});\nZone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n    // handle unhandled promise rejection\n    function findPromiseRejectionHandler(evtName) {\n        return function (e) {\n            const eventTasks = findEventTasks(global, evtName);\n            eventTasks.forEach(eventTask => {\n                // windows has added unhandledrejection event listener\n                // trigger the event listener\n                const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                if (PromiseRejectionEvent) {\n                    const evt = new PromiseRejectionEvent(evtName, { promise: e.promise, reason: e.rejection });\n                    eventTask.invoke(evt);\n                }\n            });\n        };\n    }\n    if (global['PromiseRejectionEvent']) {\n        Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n            findPromiseRejectionHandler('unhandledrejection');\n        Zone[zoneSymbol('rejectionHandledHandler')] =\n            findPromiseRejectionHandler('rejectionhandled');\n    }\n});\n"],"sourceRoot":"webpack:///"}