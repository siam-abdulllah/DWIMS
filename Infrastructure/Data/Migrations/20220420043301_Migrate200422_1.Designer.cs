// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Data.Migrations
{
    [DbContext(typeof(StoreContext))]
    [Migration("20220420043301_Migrate200422_1")]
    partial class Migrate200422_1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Core.Entities.ApprAuthConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApprovalAuthorityId")
                        .HasColumnType("int");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApprovalAuthorityId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("ApprAuthConfig");
                });

            modelBuilder.Entity("Core.Entities.ApprovalAuthority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApprovalAuthorityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ApprovalAuthority");
                });

            modelBuilder.Entity("Core.Entities.ApprovalCeiling", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Additional")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AmountPerMonth")
                        .HasColumnType("int");

                    b.Property<int>("AmountPerTransacion")
                        .HasColumnType("int");

                    b.Property<int>("ApprovalAuthorityId")
                        .HasColumnType("int");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<int>("DonationId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("InvestmentFrom")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("InvestmentTo")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovalAuthorityId");

                    b.HasIndex("DonationId");

                    b.ToTable("ApprovalCeiling");
                });

            modelBuilder.Entity("Core.Entities.ApprovalTimeLimit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApprovalAuthorityId")
                        .HasColumnType("int");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TimeLimit")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovalAuthorityId");

                    b.ToTable("ApprovalTimeLimit");
                });

            modelBuilder.Entity("Core.Entities.AuditTrail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ActionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ActionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActionTable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<string>("FormName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HostAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("TransID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AuditTrail");
                });

            modelBuilder.Entity("Core.Entities.Bcds", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BcdsAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BcdsName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NoOfMember")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Bcds");
                });

            modelBuilder.Entity("Core.Entities.BgtEmployee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("Amount")
                        .HasColumnType("bigint");

                    b.Property<int>("AuthId")
                        .HasColumnType("int");

                    b.Property<int>("CompId")
                        .HasColumnType("int");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<int>("DeptId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("EnteredBy")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("PermAmt")
                        .HasColumnType("bit");

                    b.Property<bool>("PermDonation")
                        .HasColumnType("bit");

                    b.Property<bool>("PermEdit")
                        .HasColumnType("bit");

                    b.Property<bool>("PermView")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SBU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Segment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BgtEmployee");
                });

            modelBuilder.Entity("Core.Entities.BgtOwn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("Amount")
                        .HasColumnType("bigint");

                    b.Property<long>("AmtLimit")
                        .HasColumnType("bigint");

                    b.Property<int>("CompId")
                        .HasColumnType("int");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<int>("DeptId")
                        .HasColumnType("int");

                    b.Property<int>("DonationId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("EnteredBy")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SBU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Segment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BgtOwn");
                });

            modelBuilder.Entity("Core.Entities.BgtSBUTotal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompId")
                        .HasColumnType("int");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<int>("DeptId")
                        .HasColumnType("int");

                    b.Property<int>("EnteredBy")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SBU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SBUAmount")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BgtSBUTotal");
                });

            modelBuilder.Entity("Core.Entities.BgtYearlyTotal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompId")
                        .HasColumnType("int");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<int>("DeptId")
                        .HasColumnType("int");

                    b.Property<int>("EnteredBy")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<long>("TotalAmount")
                        .HasColumnType("bigint");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BgtYearlyTotal");
                });

            modelBuilder.Entity("Core.Entities.BrandInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrandName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BrandInfo");
                });

            modelBuilder.Entity("Core.Entities.BudgetCeiling", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AmountPerMonth")
                        .HasColumnType("float");

                    b.Property<double>("AmountPerTransacion")
                        .HasColumnType("float");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<int>("DonationId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<double>("MonthlyExpense")
                        .HasColumnType("float");

                    b.Property<double>("MonthlyRemaining")
                        .HasColumnType("float");

                    b.Property<string>("SBU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("SBUWiseBudget")
                        .HasColumnType("float");

                    b.Property<double>("SBUWiseExpense")
                        .HasColumnType("float");

                    b.Property<double>("SBUWiseRemaining")
                        .HasColumnType("float");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("BudgetCeiling");
                });

            modelBuilder.Entity("Core.Entities.BudgetCeilingForCampaign", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CampaignBudget")
                        .HasColumnType("float");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<int>("DonationId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("SBU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<double>("TotalExpense")
                        .HasColumnType("float");

                    b.Property<double>("TotalRemaining")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("BudgetCeilingForCampaign");
                });

            modelBuilder.Entity("Core.Entities.CampaignDtl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("Budget")
                        .HasColumnType("bigint");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("MstId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("SubCampEndDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("SubCampStartDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("SubCampaignId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MstId");

                    b.HasIndex("SubCampaignId");

                    b.ToTable("CampaignDtl");
                });

            modelBuilder.Entity("Core.Entities.CampaignDtlProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<int>("DtlId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("DtlId");

                    b.HasIndex("ProductId");

                    b.ToTable("CampaignDtlProduct");
                });

            modelBuilder.Entity("Core.Entities.CampaignMst", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrandCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CampaignName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CampaignNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("SBU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("CampaignMst");
                });

            modelBuilder.Entity("Core.Entities.ChangeDepot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("ChangeDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<string>("DepotCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentInitId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("OldDepotCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("InvestmentInitId");

                    b.ToTable("ChangeDepot");
                });

            modelBuilder.Entity("Core.Entities.ChangeDepotSearch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<string>("DepotCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepotName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoctorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DonationTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DonationTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InvestmentInitId")
                        .HasColumnType("int");

                    b.Property<string>("MarketName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("PayRefNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProposeFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ProposedAmount")
                        .HasColumnType("float");

                    b.Property<string>("ReferenceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("ChangeDepotSearch");
                });

            modelBuilder.Entity("Core.Entities.ClusterDtl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("MstId")
                        .HasColumnType("int");

                    b.Property<string>("RegionCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MstId");

                    b.ToTable("ClusterDtl");
                });

            modelBuilder.Entity("Core.Entities.ClusterMst", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClusterCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClusterName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ClusterMst");
                });

            modelBuilder.Entity("Core.Entities.CountInt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("CountInt");
                });

            modelBuilder.Entity("Core.Entities.DepotPrintTrack", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChequeNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<string>("DepotId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepotName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("InvestmentInitId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("LastPrintTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("PayRefNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("PaymentDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("PaymentRefNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PrintCount")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SAPRefNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("InvestmentInitId");

                    b.ToTable("DepotPrintTrack");
                });

            modelBuilder.Entity("Core.Entities.DocLocMap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DoctorCode")
                        .HasColumnType("int");

                    b.Property<string>("DoctorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("SBU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("DocLocMap");
                });

            modelBuilder.Entity("Core.Entities.DoctorHonAppr", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<long>("HonAmount")
                        .HasColumnType("bigint");

                    b.Property<string>("HonMonth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InvestmentInitId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("InvestmentInitId");

                    b.ToTable("DoctorHonAppr");
                });

            modelBuilder.Entity("Core.Entities.DoctorInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AvgPrescValue")
                        .HasColumnType("int");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<string>("Degree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoctorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoctorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("PatientPerDay")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DoctorInfo");
                });

            modelBuilder.Entity("Core.Entities.DoctorMarket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<int>("DoctorCode")
                        .HasColumnType("int");

                    b.Property<string>("MarketCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("SBU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DoctorMarket");
                });

            modelBuilder.Entity("Core.Entities.Donation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<string>("DonationShortName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DonationTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Donation");
                });

            modelBuilder.Entity("Core.Entities.EmpSbuMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompId")
                        .HasColumnType("int");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<int>("DeptId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("SBU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("EmpSbuMapping");
                });

            modelBuilder.Entity("Core.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepotCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepotName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DesignationId")
                        .HasColumnType("int");

                    b.Property<string>("DesignationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeSAPCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("JoiningDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("JoiningPlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketGroupCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SBU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SBUName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("TerritoryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TerritoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZoneCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZoneName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("Core.Entities.EmployeeLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("RecStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("TerritoryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TerritoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZoneCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZoneName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmployeeLocation");
                });

            modelBuilder.Entity("Core.Entities.EmployeePosting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepotCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepotName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DesignationId")
                        .HasColumnType("int");

                    b.Property<string>("DesignationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeSAPCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("JoiningDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("JoiningPlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketGroupCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("PostingDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("RegionCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SBU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SBUName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("TerritoryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TerritoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("TransferDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ZoneCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZoneName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmployeePosting");
                });

            modelBuilder.Entity("Core.Entities.InstitutionInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AvgNoAdmtPati")
                        .HasColumnType("int");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<string>("InstitutionCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstitutionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstitutionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("NoOfBeds")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InstitutionInfo");
                });

            modelBuilder.Entity("Core.Entities.InstitutionMarket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<int>("InstitutionCode")
                        .HasColumnType("int");

                    b.Property<string>("MarketCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("SBU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InstitutionMarket");
                });

            modelBuilder.Entity("Core.Entities.InvestmentApr", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChequeTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommitmentAllSBU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CommitmentFromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CommitmentOwnSBU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CommitmentToDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CommitmentTotalMonth")
                        .HasColumnType("int");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("FromDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("InvestmentInitId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("PaymentFreq")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ProposedAmount")
                        .HasColumnType("float");

                    b.Property<string>("Purpose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("ToDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("TotalMonth")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("InvestmentInitId");

                    b.ToTable("InvestmentApr");
                });

            modelBuilder.Entity("Core.Entities.InvestmentAprComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AprStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("InvestmentInitId")
                        .HasColumnType("int");

                    b.Property<string>("MarketCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketGroupCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("RegionCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SBU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SBUName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("TerritoryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TerritoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZoneCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZoneName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("InvestmentInitId");

                    b.ToTable("InvestmentAprComment");
                });

            modelBuilder.Entity("Core.Entities.InvestmentAprProducts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("InvestmentInitId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("SBU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("InvestmentInitId");

                    b.HasIndex("ProductId");

                    b.ToTable("InvestmentAprProducts");
                });

            modelBuilder.Entity("Core.Entities.InvestmentBcds", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BcdsId")
                        .HasColumnType("int");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentInitId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ResponsibleDoctorId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("BcdsId");

                    b.HasIndex("InvestmentInitId");

                    b.HasIndex("ResponsibleDoctorId");

                    b.ToTable("InvestmentBcds");
                });

            modelBuilder.Entity("Core.Entities.InvestmentCampaign", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CampaignDtlId")
                        .HasColumnType("int");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<int>("InstitutionId")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentInitId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("CampaignDtlId");

                    b.HasIndex("DoctorId");

                    b.HasIndex("InstitutionId");

                    b.HasIndex("InvestmentInitId");

                    b.ToTable("InvestmentCampaign");
                });

            modelBuilder.Entity("Core.Entities.InvestmentDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChequeTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommitmentAllSBU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CommitmentFromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CommitmentOwnSBU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CommitmentToDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CommitmentTotalMonth")
                        .HasColumnType("int");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("FromDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("InvestmentInitId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("PaymentFreq")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ProposedAmount")
                        .HasColumnType("float");

                    b.Property<string>("Purpose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("ToDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("TotalMonth")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InvestmentInitId");

                    b.ToTable("InvestmentDetail");
                });

            modelBuilder.Entity("Core.Entities.InvestmentDetailTracker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("ApprovedAmount")
                        .HasColumnType("float");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<int>("DonationId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("FromDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("InvestmentInitId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<string>("PaidStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentRefNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("ToDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DonationId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("InvestmentInitId");

                    b.ToTable("InvestmentDetailTracker");
                });

            modelBuilder.Entity("Core.Entities.InvestmentDoctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<string>("DoctorCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<string>("DoctorType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InstitutionId")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentInitId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("PatientsPerDay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PracticeDayPerMonth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("InstitutionId");

                    b.HasIndex("InvestmentInitId");

                    b.ToTable("InvestmentDoctor");
                });

            modelBuilder.Entity("Core.Entities.InvestmentInit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Confirmation")
                        .HasColumnType("bit");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<int>("DonationId")
                        .HasColumnType("int");

                    b.Property<string>("DonationTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("MarketCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketGroupCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ProposeFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SBU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SBUName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("SubmissionDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("TerritoryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TerritoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZoneCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZoneName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DonationId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("InvestmentInit");
                });

            modelBuilder.Entity("Core.Entities.InvestmentInitForApr", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Confirmation")
                        .HasColumnType("bit");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<int>("DonationId")
                        .HasColumnType("int");

                    b.Property<string>("DonationTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("MarketCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketGroupCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ProposeFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemainingSBU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SBU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SBUName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("SubmissionDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("TerritoryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TerritoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZoneCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZoneName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DonationId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("InvestmentInitForApr");
                });

            modelBuilder.Entity("Core.Entities.InvestmentInstitution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<string>("DepartmentUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InstitutionId")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentInitId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NoOfBed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ResponsibleDoctorId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("InstitutionId");

                    b.HasIndex("InvestmentInitId");

                    b.HasIndex("ResponsibleDoctorId");

                    b.ToTable("InvestmentInstitution");
                });

            modelBuilder.Entity("Core.Entities.InvestmentMedicineProd", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BoxQuantity")
                        .HasColumnType("int");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentInitId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<double>("TpVat")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("InvestmentInitId");

                    b.HasIndex("ProductId");

                    b.ToTable("InvestmentMedicineProd");
                });

            modelBuilder.Entity("Core.Entities.InvestmentRapid", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChequeTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<string>("DepotCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepotName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DonationTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InitiatorId")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentInitId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProposeFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ProposedAmount")
                        .HasColumnType("float");

                    b.Property<DateTime>("PropsalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReferenceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SBU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("SubCampaignId")
                        .HasColumnType("int");

                    b.Property<string>("SubCampaignName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InvestmentRapid");
                });

            modelBuilder.Entity("Core.Entities.InvestmentRapidAppr", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApprovalAuthId")
                        .HasColumnType("int");

                    b.Property<string>("ApprovalRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ApprovedBy")
                        .HasColumnType("int");

                    b.Property<string>("ApprovedStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentInitId")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRapidId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("InvestmentRapidAppr");
                });

            modelBuilder.Entity("Core.Entities.InvestmentRcvPending", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("ApprovedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("Confirmation")
                        .HasColumnType("bit");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<string>("DepotName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DonationId")
                        .HasColumnType("int");

                    b.Property<string>("DonationTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("MarketCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketGroupCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayRefNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProposeFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ProposedAmount")
                        .HasColumnType("float");

                    b.Property<string>("ReferenceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SBU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SBUName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("SubmissionDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("TerritoryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TerritoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZoneCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZoneName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DonationId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("InvestmentRcvPending");
                });

            modelBuilder.Entity("Core.Entities.InvestmentRec", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChequeTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommitmentAllSBU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CommitmentFromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CommitmentOwnSBU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CommitmentToDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CommitmentTotalMonth")
                        .HasColumnType("int");

                    b.Property<bool?>("CompletionStatus")
                        .HasColumnType("bit");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("FromDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("InvestmentInitId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("PaymentFreq")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<double>("ProposedAmount")
                        .HasColumnType("float");

                    b.Property<string>("Purpose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("ToDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("TotalMonth")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("InvestmentInitId");

                    b.ToTable("InvestmentRec");
                });

            modelBuilder.Entity("Core.Entities.InvestmentRecComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("CompletionStatus")
                        .HasColumnType("bit");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("InvestmentInitId")
                        .HasColumnType("int");

                    b.Property<string>("MarketCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketGroupCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("RecStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SBU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SBUName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("TerritoryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TerritoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZoneCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZoneName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("InvestmentInitId");

                    b.ToTable("InvestmentRecComment");
                });

            modelBuilder.Entity("Core.Entities.InvestmentRecDepot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<string>("DepotCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepotName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("InvestmentInitId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("InvestmentInitId");

                    b.ToTable("InvestmentRecDepot");
                });

            modelBuilder.Entity("Core.Entities.InvestmentRecProducts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("InvestmentInitId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("SBU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("InvestmentInitId");

                    b.HasIndex("ProductId");

                    b.ToTable("InvestmentRecProducts");
                });

            modelBuilder.Entity("Core.Entities.InvestmentRecv", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChequeTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommitmentAllSBU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommitmentOwnSBU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("FromDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("InvestmentInitId")
                        .HasColumnType("int");

                    b.Property<string>("MarketCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketGroupCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("PayRefNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<long>("ProposedAmount")
                        .HasColumnType("bigint");

                    b.Property<string>("Purpose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiveStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SBU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SBUName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("TerritoryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TerritoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ToDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("TotalMonth")
                        .HasColumnType("int");

                    b.Property<string>("ZoneCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZoneName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("InvestmentInitId");

                    b.ToTable("InvestmentRecv");
                });

            modelBuilder.Entity("Core.Entities.InvestmentSociety", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentInitId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ResponsibleDoctorId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("SocietyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InvestmentInitId");

                    b.HasIndex("ResponsibleDoctorId");

                    b.HasIndex("SocietyId");

                    b.ToTable("InvestmentSociety");
                });

            modelBuilder.Entity("Core.Entities.InvestmentTargetGroupSQL", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApprovalAuthorityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentInitId")
                        .HasColumnType("int");

                    b.Property<string>("MarketCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("RecStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SBU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SBUName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("InvestmentTargetGroupSQL");
                });

            modelBuilder.Entity("Core.Entities.InvestmentTargetedGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("CompletionStatus")
                        .HasColumnType("bit");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<string>("DepotCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepotName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InvestmentInitId")
                        .HasColumnType("int");

                    b.Property<string>("MarketCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketGroupCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MarketGroupMstId")
                        .HasColumnType("int");

                    b.Property<string>("MarketGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("RegionCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SBU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SBUName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("TerritoryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TerritoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZoneCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZoneName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InvestmentInitId");

                    b.HasIndex("MarketGroupMstId");

                    b.ToTable("InvestmentTargetedGroup");
                });

            modelBuilder.Entity("Core.Entities.InvestmentTargetedProd", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentInitId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("SBU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("InvestmentInitId");

                    b.HasIndex("ProductId");

                    b.ToTable("InvestmentTargetedProd");
                });

            modelBuilder.Entity("Core.Entities.InvestmentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<string>("InvesetmentTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InvestmentType");
                });

            modelBuilder.Entity("Core.Entities.LastFiveInvestmentInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComtSharePrcnt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComtSharePrcntAll")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<string>("DonationShortName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("FromDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<double?>("InvestmentAmount")
                        .HasColumnType("float");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<double?>("PrescribedSharePrcnt")
                        .HasColumnType("float");

                    b.Property<double?>("PrescribedSharePrcntAll")
                        .HasColumnType("float");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("LastFiveInvestmentInfo");
                });

            modelBuilder.Entity("Core.Entities.MarketGroupDtl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<string>("MarketCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("MstId")
                        .HasColumnType("int");

                    b.Property<string>("SBU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SBUName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MstId");

                    b.ToTable("MarketGroupDtl");
                });

            modelBuilder.Entity("Core.Entities.MarketGroupMst", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MarketGroupMst");
                });

            modelBuilder.Entity("Core.Entities.MedDispSearch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ApprovedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<string>("DepotName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoctorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DonationTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InvestmentInitId")
                        .HasColumnType("int");

                    b.Property<string>("MarketName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("PayRefNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProposeFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ProposedAmount")
                        .HasColumnType("float");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("MedDispSearch");
                });

            modelBuilder.Entity("Core.Entities.MedicineDispatch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<string>("DepotCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepotName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("DispatchAmt")
                        .HasColumnType("float");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentInitId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("IssueDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("IssueReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("PayRefNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ProposeAmt")
                        .HasColumnType("float");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SAPRefNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("InvestmentInitId");

                    b.ToTable("MedicineDispatch");
                });

            modelBuilder.Entity("Core.Entities.MedicineDispatchDtl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BoxQuantity")
                        .HasColumnType("int");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<int>("DispatchQuantity")
                        .HasColumnType("int");

                    b.Property<double>("DispatchTpVat")
                        .HasColumnType("float");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentInitId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<double>("TpVat")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("MedicineDispatchDtl");
                });

            modelBuilder.Entity("Core.Entities.MedicineProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("PackSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("SorgaCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("UnitTp")
                        .HasColumnType("float");

                    b.Property<double>("UnitVat")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("MedicineProduct");
                });

            modelBuilder.Entity("Core.Entities.MenuConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("SubMenuId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MenuConfig");
                });

            modelBuilder.Entity("Core.Entities.MenuHead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<string>("MenuHeadName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MenuHeadSeq")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("MenuHead");
                });

            modelBuilder.Entity("Core.Entities.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("PostDescription")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("PostTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("PostedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("Post");
                });

            modelBuilder.Entity("Core.Entities.PostComments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CommentBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommentText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("NoOfDisLike")
                        .HasColumnType("int");

                    b.Property<int>("NoOfLike")
                        .HasColumnType("int");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.ToTable("PostComments");
                });

            modelBuilder.Entity("Core.Entities.ProductInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrandCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrandName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ProductCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SBU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SBUName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductInfo");
                });

            modelBuilder.Entity("Core.Entities.ReportConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ReportCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportFunc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("ReportConfig");
                });

            modelBuilder.Entity("Core.Entities.ReportInvestmentInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BcdsId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BcdsId1")
                        .HasColumnType("int");

                    b.Property<string>("ComtSharePrcnt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComtSharePrcntAll")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<string>("DivisionCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DivisionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoctorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DoctorInfoId")
                        .HasColumnType("int");

                    b.Property<string>("DonationDuration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DonationFromDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DonationToDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DonationType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExpenseDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FromDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstituteId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InstitutionInfoId")
                        .HasColumnType("int");

                    b.Property<string>("InvestmentAmount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NationalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrescShareFromDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrescShareToDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrescribedSharePrcnt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrescribedSharePrcntAll")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("SocietyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SocietyId1")
                        .HasColumnType("int");

                    b.Property<string>("TerritoryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TerritoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZoneCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZoneName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BcdsId1");

                    b.HasIndex("DoctorInfoId");

                    b.HasIndex("InstitutionInfoId");

                    b.HasIndex("SocietyId1");

                    b.ToTable("ReportInvestmentInfo");
                });

            modelBuilder.Entity("Core.Entities.ReportProductInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComtSharePrcnt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComtSharePrcntAll")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<string>("DivisionCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DivisionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoctorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DoctorInfoId")
                        .HasColumnType("int");

                    b.Property<string>("DonationDuration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DonationFromDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DonationToDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DonationType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExpenseDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FromDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstituteId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InstitutionInfoId")
                        .HasColumnType("int");

                    b.Property<string>("InvestmentAmount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NationalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrescShareFromDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrescShareToDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrescribedSharePrcnt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrescribedSharePrcntAll")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SBU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("SocietyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SocietyId1")
                        .HasColumnType("int");

                    b.Property<string>("TerritoryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TerritoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZoneCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZoneName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DoctorInfoId");

                    b.HasIndex("InstitutionInfoId");

                    b.HasIndex("SocietyId1");

                    b.ToTable("ReportProductInfo");
                });

            modelBuilder.Entity("Core.Entities.RptCampaignSummary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CampaignName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<string>("DepotName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DoctorId")
                        .HasColumnType("int");

                    b.Property<string>("DoctorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DonationTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FromDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InstitutionId")
                        .HasColumnType("int");

                    b.Property<string>("InstitutionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("PaymentFreq")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentRefNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ProposedAmount")
                        .HasColumnType("float");

                    b.Property<string>("RecStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SAPRefNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SBUName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("TerritoryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TerritoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Total")
                        .HasColumnType("float");

                    b.Property<string>("ZoneCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZoneName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RptCampaignSummary");
                });

            modelBuilder.Entity("Core.Entities.RptChequePrintSearch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ChequeTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DId")
                        .HasColumnType("int");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<string>("DoctorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DonationTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DonationTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InvestmentInitId")
                        .HasColumnType("int");

                    b.Property<string>("MarketName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("PayRefNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProposeFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ProposedAmount")
                        .HasColumnType("float");

                    b.Property<string>("SBUName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("RptChequePrintSearch");
                });

            modelBuilder.Entity("Core.Entities.RptDepotLetter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChequeTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<string>("DepotName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DesignationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DocId")
                        .HasColumnType("int");

                    b.Property<string>("DoctorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DonationTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DonationTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<double>("ProposedAmount")
                        .HasColumnType("float");

                    b.Property<string>("ReferenceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("RptDepotLetter");
                });

            modelBuilder.Entity("Core.Entities.RptDepotLetterSearch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DId")
                        .HasColumnType("int");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<string>("DoctorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DonationTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DonationTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InvestmentInitId")
                        .HasColumnType("int");

                    b.Property<string>("MarketName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("PayRefNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProposeFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ProposedAmount")
                        .HasColumnType("float");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("RptDepotLetterSearch");
                });

            modelBuilder.Entity("Core.Entities.RptDocCampWiseInvestment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActualShare")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("ActualShareBrand")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Campaign")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Commitment")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CompetitorShare")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<string>("DivisionCode")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("DivisionName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("DoctorCategory")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("DoctorId")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("DoctorName")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InstitutionId")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("InstitutionName")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<double>("InvestmentPast")
                        .HasColumnType("float");

                    b.Property<double>("InvestmentPresent")
                        .HasColumnType("float");

                    b.Property<string>("MarketCode")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("MarketGroupCode")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("MarketGroupName")
                        .HasColumnType("nvarchar(70)")
                        .HasMaxLength(70);

                    b.Property<string>("MarketName")
                        .HasColumnType("nvarchar(70)")
                        .HasMaxLength(70);

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NoOfPatient")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("NoOfPresc")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("RegionCode")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("RegionName")
                        .HasColumnType("nvarchar(70)")
                        .HasMaxLength(70);

                    b.Property<string>("SBUCode")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("SBUName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("SubCampaign")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TerritoryCode")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("TerritoryName")
                        .HasColumnType("nvarchar(70)")
                        .HasMaxLength(70);

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ZoneCode")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("ZoneName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("RptDocCampWiseInvestment");
                });

            modelBuilder.Entity("Core.Entities.RptDocLocWiseInvestment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActualShare")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Commitment")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CompetitorShare")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<string>("Deviation")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("DivisionCode")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("DivisionName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("DoctorId")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("DoctorName")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("DonationType")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InstitutionId")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("InstitutionName")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<double>("InvestedAmt")
                        .HasColumnType("float");

                    b.Property<string>("LeaderNonLeader")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("MarketCode")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("MarketGroupCode")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("MarketGroupName")
                        .HasColumnType("nvarchar(70)")
                        .HasMaxLength(70);

                    b.Property<string>("MarketName")
                        .HasColumnType("nvarchar(70)")
                        .HasMaxLength(70);

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NoOfPatient")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("NoOfPresc")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("RegionCode")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("RegionName")
                        .HasColumnType("nvarchar(70)")
                        .HasMaxLength(70);

                    b.Property<string>("SBUCode")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("SBUName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("TerritoryCode")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("TerritoryName")
                        .HasColumnType("nvarchar(70)")
                        .HasMaxLength(70);

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ZoneCode")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("ZoneName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("RptDocLocWiseInvestment");
                });

            modelBuilder.Entity("Core.Entities.RptEmpWiseExp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApprovalAuthorityId")
                        .HasColumnType("int");

                    b.Property<double?>("Budget")
                        .HasColumnType("float");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<int>("DonationId")
                        .HasColumnType("int");

                    b.Property<string>("DonationTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Expense")
                        .HasColumnType("float");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Month")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RptEmpWiseExp");
                });

            modelBuilder.Entity("Core.Entities.RptInsSocBcdsInvestment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActualShare")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("BcdsId")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("BcdsName")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Commitment")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CompetitorShare")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<string>("DivisionCode")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("DivisionName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("DonationType")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InstitutionId")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("InstitutionName")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<double>("InvestedAmt")
                        .HasColumnType("float");

                    b.Property<string>("MarketCode")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("MarketGroupCode")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("MarketGroupName")
                        .HasColumnType("nvarchar(70)")
                        .HasMaxLength(70);

                    b.Property<string>("MarketName")
                        .HasColumnType("nvarchar(70)")
                        .HasMaxLength(70);

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("RegionCode")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("RegionName")
                        .HasColumnType("nvarchar(70)")
                        .HasMaxLength(70);

                    b.Property<string>("SBUCode")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("SBUName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("SocietyId")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("SocietyName")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("TerritoryCode")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("TerritoryName")
                        .HasColumnType("nvarchar(70)")
                        .HasMaxLength(70);

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ZoneCode")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("ZoneName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("RptInsSocBcdsInvestment");
                });

            modelBuilder.Entity("Core.Entities.RptInvestmentSummary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Confirmation")
                        .HasColumnType("bit");

                    b.Property<int?>("DId")
                        .HasColumnType("int");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<string>("DepotName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DonationTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DonationTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("FromDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("InvStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InvStatusCount")
                        .HasColumnType("int");

                    b.Property<string>("MarketName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProposeFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ProposedAmount")
                        .HasColumnType("float");

                    b.Property<string>("ReceiveBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiveStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SBUName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("ToDate")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("RptInvestmentSummary");
                });

            modelBuilder.Entity("Core.Entities.RptMedDisp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ApprovedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<string>("DepotCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("DispatchAmt")
                        .HasColumnType("float");

                    b.Property<string>("DoctorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DonationTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("PayRefNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("PaymentDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ReferenceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SAPRefNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SBUName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("RptMedDisp");
                });

            modelBuilder.Entity("Core.Entities.RptSBUWiseExp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("Amount")
                        .HasColumnType("bigint");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<double?>("Expense")
                        .HasColumnType("float");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("SBUName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RptSBUWiseExp");
                });

            modelBuilder.Entity("Core.Entities.RptSBUWiseExpSummart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("Budget")
                        .HasColumnType("bigint");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<int>("DonationId")
                        .HasColumnType("int");

                    b.Property<string>("DonationTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Expense")
                        .HasColumnType("float");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("SBU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SBUName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("RptSBUWiseExpSummart");
                });

            modelBuilder.Entity("Core.Entities.RptSummary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Confirmation")
                        .HasColumnType("bit");

                    b.Property<int?>("DId")
                        .HasColumnType("int");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<string>("DepotName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DonationTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DonationTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FromDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentFreq")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentRefNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProposeFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ProposedAmount")
                        .HasColumnType("float");

                    b.Property<string>("ReceiveBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiveStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SAPRefNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SBUName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("TerritoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZoneName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RptSummary");
                });

            modelBuilder.Entity("Core.Entities.RptYearlyBudget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("Amount")
                        .HasColumnType("bigint");

                    b.Property<double?>("April")
                        .HasColumnType("float");

                    b.Property<double?>("August")
                        .HasColumnType("float");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<double?>("December")
                        .HasColumnType("float");

                    b.Property<int>("DonationId")
                        .HasColumnType("int");

                    b.Property<string>("DonationTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Expense")
                        .HasColumnType("float");

                    b.Property<double?>("February")
                        .HasColumnType("float");

                    b.Property<double?>("January")
                        .HasColumnType("float");

                    b.Property<double?>("July")
                        .HasColumnType("float");

                    b.Property<double?>("June")
                        .HasColumnType("float");

                    b.Property<double?>("March")
                        .HasColumnType("float");

                    b.Property<double?>("May")
                        .HasColumnType("float");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<double?>("November")
                        .HasColumnType("float");

                    b.Property<double?>("October")
                        .HasColumnType("float");

                    b.Property<string>("SBUName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("September")
                        .HasColumnType("float");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RptYearlyBudget");
                });

            modelBuilder.Entity("Core.Entities.SBU", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SBUName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("SBU");
                });

            modelBuilder.Entity("Core.Entities.SBUWiseBudget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("Amount")
                        .HasColumnType("bigint");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<int>("DonationId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("FromDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SBU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SBUName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("ToDate")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("DonationId");

                    b.ToTable("SBUWiseBudget");
                });

            modelBuilder.Entity("Core.Entities.Society", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NoOfMember")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("SocietyAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SocietyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Society");
                });

            modelBuilder.Entity("Core.Entities.SubCampaign", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubCampaignName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SubCampaign");
                });

            modelBuilder.Entity("Core.Entities.SubMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<int>("MenuHeadId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("SubMenuName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubMenuSeq")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SubMenu");
                });

            modelBuilder.Entity("Core.Entities.SystemSummary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Phase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SBUA")
                        .HasColumnType("int");

                    b.Property<int?>("SBUB")
                        .HasColumnType("int");

                    b.Property<int?>("SBUC")
                        .HasColumnType("int");

                    b.Property<int?>("SBUD")
                        .HasColumnType("int");

                    b.Property<int?>("SBUE")
                        .HasColumnType("int");

                    b.Property<int?>("SBUN")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("SystemSummary");
                });

            modelBuilder.Entity("Core.Entities.YearlyBudget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("Amount")
                        .HasColumnType("bigint");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("FromDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("SetOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("ToDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("YearlyBudget");
                });

            modelBuilder.Entity("Core.Entities.ApprAuthConfig", b =>
                {
                    b.HasOne("Core.Entities.ApprovalAuthority", "ApprovalAuthority")
                        .WithMany()
                        .HasForeignKey("ApprovalAuthorityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Core.Entities.ApprovalCeiling", b =>
                {
                    b.HasOne("Core.Entities.ApprovalAuthority", "ApprovalAuthority")
                        .WithMany()
                        .HasForeignKey("ApprovalAuthorityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Donation", "Donation")
                        .WithMany()
                        .HasForeignKey("DonationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Core.Entities.ApprovalTimeLimit", b =>
                {
                    b.HasOne("Core.Entities.ApprovalAuthority", "ApprovalAuthority")
                        .WithMany()
                        .HasForeignKey("ApprovalAuthorityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Core.Entities.CampaignDtl", b =>
                {
                    b.HasOne("Core.Entities.CampaignMst", null)
                        .WithMany("CampaignDtls")
                        .HasForeignKey("MstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.SubCampaign", "SubCampaign")
                        .WithMany()
                        .HasForeignKey("SubCampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Core.Entities.CampaignDtlProduct", b =>
                {
                    b.HasOne("Core.Entities.CampaignDtl", null)
                        .WithMany("CampaignDtlProducts")
                        .HasForeignKey("DtlId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.ProductInfo", "ProductInfo")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Core.Entities.CampaignMst", b =>
                {
                    b.HasOne("Core.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");
                });

            modelBuilder.Entity("Core.Entities.ChangeDepot", b =>
                {
                    b.HasOne("Core.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("Core.Entities.InvestmentInit", "InvestmentInit")
                        .WithMany()
                        .HasForeignKey("InvestmentInitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Core.Entities.ClusterDtl", b =>
                {
                    b.HasOne("Core.Entities.ClusterMst", null)
                        .WithMany("ClusterDtls")
                        .HasForeignKey("MstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Core.Entities.DepotPrintTrack", b =>
                {
                    b.HasOne("Core.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("Core.Entities.InvestmentInit", "InvestmentInit")
                        .WithMany()
                        .HasForeignKey("InvestmentInitId");
                });

            modelBuilder.Entity("Core.Entities.DoctorHonAppr", b =>
                {
                    b.HasOne("Core.Entities.DoctorInfo", "DoctorInfo")
                        .WithMany()
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.InvestmentInit", "InvestmentInit")
                        .WithMany()
                        .HasForeignKey("InvestmentInitId");
                });

            modelBuilder.Entity("Core.Entities.InvestmentApr", b =>
                {
                    b.HasOne("Core.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.InvestmentInit", "InvestmentInit")
                        .WithMany()
                        .HasForeignKey("InvestmentInitId");
                });

            modelBuilder.Entity("Core.Entities.InvestmentAprComment", b =>
                {
                    b.HasOne("Core.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.InvestmentInit", "InvestmentInit")
                        .WithMany()
                        .HasForeignKey("InvestmentInitId");
                });

            modelBuilder.Entity("Core.Entities.InvestmentAprProducts", b =>
                {
                    b.HasOne("Core.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("Core.Entities.InvestmentInit", "InvestmentInit")
                        .WithMany()
                        .HasForeignKey("InvestmentInitId");

                    b.HasOne("Core.Entities.ProductInfo", "ProductInfo")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Core.Entities.InvestmentBcds", b =>
                {
                    b.HasOne("Core.Entities.Bcds", "Bcds")
                        .WithMany()
                        .HasForeignKey("BcdsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.InvestmentInit", "InvestmentInit")
                        .WithMany()
                        .HasForeignKey("InvestmentInitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.DoctorInfo", "DoctorInfo")
                        .WithMany()
                        .HasForeignKey("ResponsibleDoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Core.Entities.InvestmentCampaign", b =>
                {
                    b.HasOne("Core.Entities.CampaignDtl", "CampaignDtl")
                        .WithMany()
                        .HasForeignKey("CampaignDtlId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.DoctorInfo", "DoctorInfo")
                        .WithMany()
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.InstitutionInfo", "InstitutionInfo")
                        .WithMany()
                        .HasForeignKey("InstitutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.InvestmentInit", "InvestmentInit")
                        .WithMany()
                        .HasForeignKey("InvestmentInitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Core.Entities.InvestmentDetail", b =>
                {
                    b.HasOne("Core.Entities.InvestmentInit", "InvestmentInit")
                        .WithMany()
                        .HasForeignKey("InvestmentInitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Core.Entities.InvestmentDetailTracker", b =>
                {
                    b.HasOne("Core.Entities.Donation", "Donation")
                        .WithMany()
                        .HasForeignKey("DonationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.InvestmentInit", "InvestmentInit")
                        .WithMany()
                        .HasForeignKey("InvestmentInitId");
                });

            modelBuilder.Entity("Core.Entities.InvestmentDoctor", b =>
                {
                    b.HasOne("Core.Entities.DoctorInfo", "DoctorInfo")
                        .WithMany()
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.InstitutionInfo", "InstitutionInfo")
                        .WithMany()
                        .HasForeignKey("InstitutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.InvestmentInit", "InvestmentInit")
                        .WithMany()
                        .HasForeignKey("InvestmentInitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Core.Entities.InvestmentInit", b =>
                {
                    b.HasOne("Core.Entities.Donation", "Donation")
                        .WithMany()
                        .HasForeignKey("DonationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Core.Entities.InvestmentInitForApr", b =>
                {
                    b.HasOne("Core.Entities.Donation", "Donation")
                        .WithMany()
                        .HasForeignKey("DonationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Core.Entities.InvestmentInstitution", b =>
                {
                    b.HasOne("Core.Entities.InstitutionInfo", "InstitutionInfo")
                        .WithMany()
                        .HasForeignKey("InstitutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.InvestmentInit", "InvestmentInit")
                        .WithMany()
                        .HasForeignKey("InvestmentInitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.DoctorInfo", "DoctorInfo")
                        .WithMany()
                        .HasForeignKey("ResponsibleDoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Core.Entities.InvestmentMedicineProd", b =>
                {
                    b.HasOne("Core.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("Core.Entities.InvestmentInit", "InvestmentInit")
                        .WithMany()
                        .HasForeignKey("InvestmentInitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.MedicineProduct", "MedicineProduct")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Core.Entities.InvestmentRcvPending", b =>
                {
                    b.HasOne("Core.Entities.Donation", "Donation")
                        .WithMany()
                        .HasForeignKey("DonationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Core.Entities.InvestmentRec", b =>
                {
                    b.HasOne("Core.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.InvestmentInit", "InvestmentInit")
                        .WithMany()
                        .HasForeignKey("InvestmentInitId");
                });

            modelBuilder.Entity("Core.Entities.InvestmentRecComment", b =>
                {
                    b.HasOne("Core.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.InvestmentInit", "InvestmentInit")
                        .WithMany()
                        .HasForeignKey("InvestmentInitId");
                });

            modelBuilder.Entity("Core.Entities.InvestmentRecDepot", b =>
                {
                    b.HasOne("Core.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.InvestmentInit", "InvestmentInit")
                        .WithMany()
                        .HasForeignKey("InvestmentInitId");
                });

            modelBuilder.Entity("Core.Entities.InvestmentRecProducts", b =>
                {
                    b.HasOne("Core.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("Core.Entities.InvestmentInit", "InvestmentInit")
                        .WithMany()
                        .HasForeignKey("InvestmentInitId");

                    b.HasOne("Core.Entities.ProductInfo", "ProductInfo")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Core.Entities.InvestmentRecv", b =>
                {
                    b.HasOne("Core.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.InvestmentInit", "InvestmentInit")
                        .WithMany()
                        .HasForeignKey("InvestmentInitId");
                });

            modelBuilder.Entity("Core.Entities.InvestmentSociety", b =>
                {
                    b.HasOne("Core.Entities.InvestmentInit", "InvestmentInit")
                        .WithMany()
                        .HasForeignKey("InvestmentInitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.DoctorInfo", "DoctorInfo")
                        .WithMany()
                        .HasForeignKey("ResponsibleDoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Society", "Society")
                        .WithMany()
                        .HasForeignKey("SocietyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Core.Entities.InvestmentTargetedGroup", b =>
                {
                    b.HasOne("Core.Entities.InvestmentInit", "InvestmentInit")
                        .WithMany()
                        .HasForeignKey("InvestmentInitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.MarketGroupMst", "MarketGroupMst")
                        .WithMany()
                        .HasForeignKey("MarketGroupMstId");
                });

            modelBuilder.Entity("Core.Entities.InvestmentTargetedProd", b =>
                {
                    b.HasOne("Core.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("Core.Entities.InvestmentInit", "InvestmentInit")
                        .WithMany()
                        .HasForeignKey("InvestmentInitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.ProductInfo", "ProductInfo")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Core.Entities.MarketGroupDtl", b =>
                {
                    b.HasOne("Core.Entities.MarketGroupMst", null)
                        .WithMany("MarketGroupDtls")
                        .HasForeignKey("MstId");
                });

            modelBuilder.Entity("Core.Entities.MedicineDispatch", b =>
                {
                    b.HasOne("Core.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("Core.Entities.InvestmentInit", "InvestmentInit")
                        .WithMany()
                        .HasForeignKey("InvestmentInitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Core.Entities.PostComments", b =>
                {
                    b.HasOne("Core.Entities.Post", "Post")
                        .WithMany("PostComments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Core.Entities.ReportInvestmentInfo", b =>
                {
                    b.HasOne("Core.Entities.Bcds", "Bcds")
                        .WithMany()
                        .HasForeignKey("BcdsId1");

                    b.HasOne("Core.Entities.DoctorInfo", "DoctorInfo")
                        .WithMany()
                        .HasForeignKey("DoctorInfoId");

                    b.HasOne("Core.Entities.InstitutionInfo", "InstitutionInfo")
                        .WithMany()
                        .HasForeignKey("InstitutionInfoId");

                    b.HasOne("Core.Entities.Society", "Society")
                        .WithMany()
                        .HasForeignKey("SocietyId1");
                });

            modelBuilder.Entity("Core.Entities.ReportProductInfo", b =>
                {
                    b.HasOne("Core.Entities.DoctorInfo", "DoctorInfo")
                        .WithMany()
                        .HasForeignKey("DoctorInfoId");

                    b.HasOne("Core.Entities.InstitutionInfo", "InstitutionInfo")
                        .WithMany()
                        .HasForeignKey("InstitutionInfoId");

                    b.HasOne("Core.Entities.Society", "Society")
                        .WithMany()
                        .HasForeignKey("SocietyId1");
                });

            modelBuilder.Entity("Core.Entities.SBUWiseBudget", b =>
                {
                    b.HasOne("Core.Entities.Donation", "Donation")
                        .WithMany()
                        .HasForeignKey("DonationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
